<!-- Common Functions (SciELO Interface)-->
<include>ScieloXML/sci_getdefine.xis</include>
<!-- ============================================================================ -->
<!--  function GetCurrentIssue                                                       -->
<!--                                                                              -->
<!--  Gets the pid (issnyyyynnnn) of the last issue of a serial.                  -->
<!--                                                                              -->
<!--  Argument:                                                                   -->
<!--     The pid (issn) of the serial.                                            -->
<!--                                                                              -->
<!--  Return value:                                                               -->
<!--     If found, returns the pid of the last issue of the serial in the tag     -->
<!--  7090. Otherwise, returns nothing.                                           -->
<!-- ============================================================================ -->
<function name="GetCurrentIssue" action="replace" tag="4900">
	<!--display><pft>'v4900 = ',v4900,'<br>'</pft></display-->

	<do task="keyrange">
		<!--parm name="db">NEWISSUE</parm-->
		<parm name="db">ARTIGO</parm>
		<parm name="from"><pft>'Y',v4900,'zzzz'</pft></parm>
		<!--parm name="count">1</parm-->
		<parm name="reverse">On</parm>
		
		<field action="define" tag="4901">Isis_Key</field>
		
		<loop>

			<field action="import" tag="list">4900</field>
			<field action="delete" tag="list">9032</field>
			<call name="isAnIssueAvailableBeforePrint"><pft>v4901*1</pft></call>
	<display><pft>'<!-- v4901=', v4901,' -->'</pft></display>
	<display><pft>'<!-- v4900=', v4900,' -->'</pft></display>
	<display><pft>'<!-- l([NEWISSUE],v4901)=',f(l(['NEWISSUE'],v4901),1,0),' -->'</pft></display>

			<flow action="skip">
				<pft>
					if v9032='' then

					if instr(v4901,v4900) = 0 then
						'Quit'
					else
							if l(['NEWISSUE'],v4901) > 0 then
									'Quit' 
							fi
						fi
					fi
				</pft>
			</flow>
		</loop>
	</do>

	<!--display><pft>'Isis_Key (v4901): ', v4901,'<br>'</pft></display-->
	<display><pft>'<!-- retorno=',if p(v4901) and instr(v4901, v4900) > 0 then v4901*1 fi,' -->'</pft></display>

	<return action="replace" tag="7090">
		<pft>
			/* If the pid of the serial (issn) isn't in the key, then it's another serial */
			if p(v4901) and instr(v4901, v4900) > 0 then v4901*1 fi
		</pft>
	</return>

</function>

<!-- ============================================================================ -->
<!--  function GetPreviousIssue                                                   -->
<!--                                                                              -->
<!--  Gets the pid (issnyyyynnnn) of the previous issue of the current issue.     -->
<!--                                                                              -->
<!--  Argument:                                                                   -->
<!--     The pid (issnyyyynnnn) of the current issue.                             -->
<!--                                                                              -->
<!--  Return value:                                                               -->
<!--     If found, returns the pid of the previous issue in the tag 7085.         -->
<!--  Otherwise, returns nothing.                                                 -->
<!--  Note:                                                                       -->
<!--  If it is a ahead of print issue, the previous issue is the current issue    -->
<!--  Otherwise any previous issue but any ahead of print                         -->
<!-- ============================================================================ -->
<function name="GetPreviousIssue" action="replace" tag="4900">
	<!--display><pft>'v4900 = ',v4900,'<br>'</pft></display-->


	<!-- as tres partes abaixo se excluem -->
	<!-- parte 1 - no caso de current=review entao previous=ahead -->
	<call name="isAnIssueAvailableBeforePrint"><pft>v4900</pft></call>
	<call name="GetIssueAvailableBeforePrint"><pft>if v9032='review' then '^a',mid(v4900,1,9),'^bAHEAD' fi</pft></call>
	<field action="replace" tag="7085"><pft>v7095</pft></field>
	<field action="delete" tag="7095">1</field>

	<!-- parte 2 - no caso de current=review ou current=ahead entao previous=ultimo issue diferente de ahead -->
	<call name="GetCurrentIssue"><pft>if a(v7085) then if v9032='ahead' or v9032='review' then mid(v4900,1,9) fi fi</pft></call>
	<field action="replace" tag="7085"><pft>v7090</pft></field>
	<field action="delete" tag="7090">1</field>

	<!-- parte 3 - no caso de nenhum das anteriores, entao previous eh qualquer issue normal -->
	<flow action="jump"><pft>if p(v7085) then 'fim' fi</pft></flow>
	<do task="keyrange">
		<!--parm name="db">NEWISSUE</parm-->
		<parm name="db">ARTIGO</parm>
		<parm name="from"><pft>'Y',v4900</pft></parm>
		<!--parm name="count">10</parm-->
		<parm name="reverse">On</parm>
		
		<field action="define" tag="4901">Isis_Key</field>
		
		<loop>
			<display><pft>'<!-- ',v4901,' -->'/</pft></display>
			<field action="import" tag="4900">4900</field>
			<call name="isAnIssueAvailableBeforePrint"><pft>v4901*1</pft></call>
			<field action="replace" tag="4902">
				<pft>
					/* The first key found whose pid isn't the current issue's and it is not ahead neither review */
					if p(v4901) then
						if  instr(v4901,v4900) = 0 then
							/* eh a proxima chave, agora verifica se eh a mesma revista */
							if  instr(v4901,s('Y',mid(v4900,1,9))) = 1 then
								/* eh da mesma revista, mesmo issn */
								if v9032<>'ahead' and v9032<>'review' then
									if l(['NEWISSUE'],v4901) > 0 then, 
										'OK' 
									fi
								fi
							else 
								/* nao eh da mesma revista, issn diferente */
								'Error'
							fi
						else 
							/* eh a mesma chave, entao continuar */
						fi
					else
 							'Error' 
					fi 
				</pft>
			</field>
			
			<field action="export" tag="list">4901,4902</field>
			<flow action="skip">
				<pft>
					if v4902='OK' or v4902='Error' then 
						'Quit'
					fi
				</pft>
			</flow>
		</loop>	
	</do>	
	<field action="replace" tag="7085"><pft>if v4902='OK' then v4901*1 fi</pft></field>
	<label>fim</label>
	<return action="replace" tag="7085"><pft>v7085</pft></return>
</function>

<!-- ============================================================================ -->
<!--  function isAnIssueAvailableBeforePrint						              -->
<!--                                                                              -->
<!--  Gets the pid (issnyyyynnnn) of an issue with special characteristics,       -->
<!--            which can be ahead or review, or ...                              -->
<!--                                                                              -->
<!--  Argument:                                                                   -->
<!--   v4900 :   The pid (issnyyyynnnn)  									  -->
<!--   v4900^m : mfn do issue													  -->
<!--                                                                              -->
<!--  Return value:                                                               -->
<!--     If found, returns the pid of an issue with special characteristics       -->
<!--     in the tag 9032. Otherwise  returns nothing.							  -->
<!--																	          -->
<!-- ============================================================================ -->
<function name="isAnIssueAvailableBeforePrint" action="replace" tag="4900">
	<!--display><pft>'v4900 = ',v4900,'<br>'</pft></display-->
	<!-- 
		Essa funcao foi criada para encapsular o que identifica a caracteristica 
		de um issue ser publicado antes de impresso (ahead or review) 
		Atualmente, foi decidido que o v32 (numero) eh o que identifica, mas
		em breve, isso pode mudar. Havendo essa função muda-se as regras aqui 
		e o restante do programa continuará valendo
	-->

	<field action="replace" tag="1">
		<pft>if p(v4900^m) then v4900^m else f(l(['NEWISSUE'],'Y',v4900),1,0) fi</pft>
	</field>
	<field action="replace" tag="9032">
		<pft>if ref(['NEWISSUE']val(v1),v32)='ahead' or ref(['NEWISSUE']val(v1),v32)='review' then ref(['NEWISSUE']val(v1),v32) fi</pft>
	</field>
	
	<return action="replace" tag="9032"><pft>v9032</pft></return>
		
</function>

<!-- ============================================================================ -->
<!--  function GetIssueAvailableBeforePrint                                  -->
<!--                                                                              -->
<!--  Gets the pid (issnyyyynnnn) of an issue with special characteristics,       -->
<!--            which can be ahead or review, or ...                              -->
<!--                                                                              -->
<!--  Argument:                                                                   -->
<!--   v4900^a :   The ISSN of the title.										  -->
<!--   v4900^b :   the prefix: AHEAD or REVIEW									  -->
<!--   v4900^c :   retorna o pid mesmo que não tenha artigos                      -->
<!--  Return value:                                                               -->
<!--     If found, returns the pid of an issue with special characteristics       -->
<!--     in the tag 7095. Otherwise  returns nothing.							  -->
<!--																	          -->
<!-- ============================================================================ -->
<function name="GetIssueAvailableBeforePrint" action="replace" tag="4900">
	<!--display><pft>'v4900 = ',v4900,'<br>'</pft></display-->
	
	<do task="keyrange">
		<parm name="db">ARTIGO</parm>
		<parm name="from"><pft>v4900^b,'='v4900^a</pft></parm>
		<parm name="count">1</parm>

		<loop>
			<field action="import" tag="4900">4900</field>
			<field action="replace" tag="4901">
				<pft>ref(['ARTIGO']l(['ARTIGO'],v4900^b,'=',v4900^a),@PROC_SPLIT_MST.PFT,
					v35,v65*0.4,s(f(val(s(v36*4.3))+10000,2,0))*1.4)</pft>
			</field>
			<field action="export" tag="4901">4901</field>
		</loop>	
	</do>
	<flow action="jump"><pft>if a(v4901) or v4900^c='0' then 'Next' fi</pft></flow>
	<do task="keyrange">
	   <parm name="db">ARTIGO</parm>
	   <parm name="from"><pft>'SM='v4901</pft></parm>
	   <parm name="count">1</parm>

	   <loop>
			<field action="import" tag="4901">4901</field>
			<field action="export" tag="4902">4901</field>
		</loop>	
	</do>	
	<label>Next</label>
	<return action="replace" tag="7095"><pft>if p(v4902) or p(v4900^c) then v4901,if v4900^c='1' and p(v4902) then '^f1' fi, fi</pft></return>

</function>

<!-- ============================================================================ -->
<!--  function GetNextIssue                                                       -->
<!--                                                                              -->
<!--  Gets the pid (issnyyyynnnn) of the next issue of the current issue.         -->
<!--                                                                              -->
<!--  Argument:                                                                   -->
<!--     The pid (issnyyyynnnn) of the current issue.                             -->
<!--                                                                              -->
<!--  Return value:                                                               -->
<!--     If found, returns the pid of the next issue in the tag 7095. Otherwise   -->
<!--  returns nothing.                                                            -->
<!-- ============================================================================ -->
<function name="GetNextIssue" action="replace" tag="4900">
	<field action="import" tag="list">7049/7050</field>
	<!--display><pft>'v4900 = ',v4900,'<br>'</pft></display-->
	<!--display><pft>ALL</pft></display-->
	
	<call name="isAnIssueAvailableBeforePrint"><pft>v4900</pft></call>

	<flow action="jump"><pft>if v9032='ahead' then 'CHECK_REVIEW'	fi</pft></flow>

	<flow action="jump"><pft>if v9032='review' then 'NO_NEXT'	fi</pft></flow>

	<do task="keyrange">
		<!--parm name="db">NEWISSUE</parm-->
		<parm name="db">ARTIGO</parm>
		<parm name="from"><pft>'Y',v4900,'zzzzz'</pft></parm>
		<!--parm name="count">1</parm-->
		
		<field action="define" tag="4901">Isis_Key</field>
		
		<loop>
			<display><pft>'<!-- ',v4901,' -->'/</pft></display>
			<field action="import" tag="list">9036,4900</field>
	
			<flow action="skip">
		<pft>
					/* The first key found whose pid isn't the current issue's  */
					/* pid stops the loop.                                      */
					if v9032<>'ahead' and v9032<>'review'  then
						if l(['NEWISSUE'],v4901) > 0 then, 
							'Quit'
						fi
					fi
				</pft>
			</flow>
		
		</loop>	
	</do>	
	<field action="replace" tag="7095"><pft>
			/* The pid of the key must be different from the pid of the current issue */
			/* and the issn must be equal.                                            */

			/* chave valida */
			if p(v4901) and 
					/* chave nao eh a mesma do issue atual */
			   instr(v4901, v4900) = 0 and
				
				   /* mas eh do mesmo issn */
			   instr(v4901, left(v4900, size(v4900) - 8) ) > 0 and
				   
				   /* existe em newissue */
			   l(['NEWISSUE'],v4901) > 0 then, 

				v4901*1,
			fi,
		</pft>
	</field>

	<label>CHECK_AHEAD</label>
	<call name="GetIssueAvailableBeforePrint"><pft>if a(v7095) then '^a',mid(v4900,1,9),'^bAHEAD' fi</pft></call>
	
	<label>CHECK_REVIEW</label>
	<call name="GetIssueAvailableBeforePrint"><pft>if a(v7095) and v7050<>'together' then '^a',mid(v4900,1,9),'^bREVIEW' fi</pft></call>

	<label>NO_NEXT</label>
	<return action="replace" tag="7095"><pft>v7095</pft></return>
		
</function>

<!-- ============================================================================ -->
<!--  function GetPreviousArticle                                                 -->
<!--                                                                              -->
<!--  Gets the pid (issnyyyynnnnaaaaa) of the previous article of the current     -->
<!--  article.                                                                    -->
<!--                                                                              -->
<!--  Argument:                                                                   -->
<!--     The pid (issnyyyynnnnaaaaa) of the current article.                      -->
<!--                                                                              -->
<!--  Return value:                                                               -->
<!--     If found, returns the pid of the previous article in the tag 7085.       -->
<!--  Otherwise, returns nothing.                                                 -->
<!-- ============================================================================ -->
<function name="GetPreviousArticle" action="replace" tag="4900">
	<!--display><pft>'v4900 = ',v4900,'<br>'</pft></display-->
	<do task="keyrange">
		<parm name="db">ARTIGO</parm>
		<parm name="from"><pft>'HR=',v4900</pft></parm>
		<!--parm name="count">2</parm-->
		<parm name="reverse">On</parm>
		
		<field action="define" tag="4901">Isis_Key</field>
		
		<loop>
			<field action="import" tag="4900">4900</field>
			<flow action="skip">
				<pft>
					/* The first key found whose pid isn't the current article's  */
					/* pid stops the loop.                                        */
					/* if article has new-pid (v222) then execute next loop       */
					if ref(['ARTIGO']l(['ARTIGO'],v4901),@PROC_SPLIT_MST.PFT,v222)='' then 
					if p(v4901) and instr(v4901,v4900) = 0 then 'Quit' fi
					fi
				</pft>
			</flow>
		</loop>	
	</do>	

	<!--display><pft>'Isis_Key (v4901): ', v4901,'<br>'</pft></display-->
	
	<return action="replace" tag="7085">
		<pft>
			/* The pid of the key must be different from the pid of the current issue */
			/* and the issue must be equal.                                           */
			if p(v4901) and
			   instr(v4901, v4900) = 0 and 
			   instr(v4901, left(v4900, size(v4900) - 5)) > 0 then,
 				mid(v4901*3, 1, 25),
			fi,
		</pft>
	</return>
</function>

<!-- ============================================================================ -->
<!--  function GetNextArticle                                                     -->
<!--                                                                              -->
<!--  Gets the pid (issnyyyynnnnaaaaa) of the next article of the current article.-->
<!--                                                                              -->
<!--  Argument:                                                                   -->
<!--     The pid (issnyyyynnnnaaaaa) of the current article.                      -->
<!--                                                                              -->
<!--  Return value:                                                               -->
<!--     If found, returns the pid of the next article in the tag 7095. Otherwise -->
<!--  returns nothing.                                                            -->
<!-- ============================================================================ -->
<function name="GetNextArticle" action="replace" tag="4900">
	<!--display><pft>'v4900 = ',v4900,'<br>'</pft></display-->

	<do task="keyrange">
		<parm name="db">ARTIGO</parm>
		<parm name="from"><pft>'HR=',v4900,'zzzzz'</pft></parm>
		<!--parm name="count">1</parm-->
		
		<field action="define" tag="4901">Isis_Key</field>
		
		<loop>
			<field action="import" tag="4900">4900</field>
			<flow action="skip">
				<pft>
					/* The first key found whose pid isn't the current article's  */
					/* pid stops the loop.                                        */
					/* if article has new-pid (v222) then execute next loop       */
					if ref(['ARTIGO']l(['ARTIGO'],v4901),@PROC_SPLIT_MST.PFT,v222)='' then 
						'Quit'
					fi
				</pft>
			</flow>
		</loop>	
	</do>	

	<!--display><pft>'Isis_Key (v4901): ', v4901,'<br>'</pft></display-->
	
	<return action="replace" tag="7095">
		<pft>
			/* The pid of the key must be different from the pid of the current article */
			/* and the issue must be equal.                                             */
			if p(v4901) and ref(['ARTIGO']l(['ARTIGO'],v4901),@PROC_SPLIT_MST.PFT,v222)='' and
			   instr(v4901, v4900) = 0 and
			   instr(v4901, left(v4900, size(v4900) - 5)) > 0 then,
 				mid(v4901*3, 1, 25),				
			fi,
		</pft>
	</return>
		
</function>

<!-- Funcoes de sci_common.xis -->


<!-- ============================================================================ -->
<!--  function CreateControlInfoXML                                               -->
<!--                                                                              -->
<!--  Prints the xml control information.                                         -->
<!--                                                                              -->
<!--  Arguments:                                                                  -->
<!--     ^lLanguage^sStandard^pPID^tTarget^iInternational Language^fpage (from)                -->
<!--     where Target is      	                                                  -->
<!--	    'TIT' navigation in the issues but none either selected               -->
<!--	    'ISS' navigation in the issues but one issue already selected         -->
<!--	    'ART' navigation in the articles (Full-Text)                          -->
<!--	    'ABS' navigation in the articles (Abstract)                           -->
<!-- ============================================================================ -->
<function name="CreateControlInfoXML" action="replace" tag="4900">
	<field action="import" tag="list">7009/7050</field> <!-- fixed -->
<field action="import" tag="list">7201/7213</field>
<!--trace>On</trace--> 


	<display><pft>
		' <CONTROLINFO>'/,
		'  <DATETIME>',date,'</DATETIME>'/
		'  <LANGUAGE>',v4900^l,'</LANGUAGE>'/
		'  <STANDARD>',v4900^s,'</STANDARD>'/
		'  <PAGE_NAME>',v4900^f,'</PAGE_NAME>'/
		if p(v4900^p) then,
		'  <PAGE_PID>',v4900^p,'</PAGE_PID>'/,
		fi,
		'  <APP_NAME>',v7038,'</APP_NAME>'/,
		"  <ENABLE_STAT_LINK>"v7039"</ENABLE_STAT_LINK>"/,
		"  <ENABLE_CIT_REP_LINK>"v7040"</ENABLE_CIT_REP_LINK>"/,
		
	</pft></display>
	
	<call name="CreatePathControlInfoXML">Now</call>
	
	<call name="CreateCurrentPreviousIssue">
		<pft>
			if s(mpu,v4900^t,mpl) = 'TIT' then 
				mpu,v4900^p,mpl 
			fi
		</pft>
	</call>
	
	<call name="CreatePreviousNextIssue">
		<pft>
			if s(mpu,v4900^t,mpl) = 'ISS' then 
				mpu,v4900^p,mpl 
			fi
		</pft>
	</call>
	
	<call name="CreatePreviousNextArticle">
		<pft>
			/* Pass ^pPid^lLanguage^iInternational Lang^tTarget type */
			if s(mpu,v4900^t,mpl) = 'ART' or s(mpu,v4900^t,mpl) = 'ABS' then, 
				'^p',mpu,v4900^p,mpl,'^l',v4900^l,'^i',v4900^i,'^t',v4900^t
			fi
		</pft>
	</call>
	<call name="CreatePDFLinkXML">
		<pft>
			if s(mpu,v4900^t,mpl) = 'PDF' then 
				v4900^u
			fi
		</pft>
	</call>

	<display><pft>' </CONTROLINFO>'/#</pft></display>
</function>

<!-- ============================================================================ -->
<!--  function CreateCurrentPreviousIssue                                         -->
<!--                                                                              -->
<!--  Prints the current and previous issues' control information.              -->
<!--                                                                              -->
<!--  Argument:                                                                   -->
<!--     The pid (issn) of the serial.                                            -->
<!-- ============================================================================ -->
<function name="CreateCurrentPreviousIssue" action="replace" tag="4900">
<field action="delete" tag="list">7050,7085,7090,7095</field>
	
	<!--display><pft>| v4900 = |v4900</pft></display-->

	<call name="GetCurrentIssue"><pft>v4900</pft></call>
	<call name="GetPreviousIssue"><pft>v7090</pft></call>
	<call name="GetNextIssue"><pft>v7090</pft></call>
	<!--call name="GetIssueAvailableBeforePrint"><pft>'^a'v4900,'^bAHEAD'</pft></call>

	<call name="GetIssueAvailableBeforePrint"><pft>if a(v7095) then '^a'v4900,'^bREVIEW' fi</pft></call-->

	<display>
		<pft>
			'  <ISSUES>',/			
			if p(v7085) then
				'   <PREVIOUS PID="',v7085,'"',
				ref( ['NEWISSUE'] l(['NEWISSUE'], 'Y',v7085), 
					| VOL="|v21|"|,
					if p(v53) then ' NUM="',s(mpu,v53,mpl),'"' fi,
					| SUPPL="|v131|"|, | SUPPL="|v132|"|
				   )
				' />'/,
			fi,
			
			if p(v7090) then
				'   <CURRENT PID="',v7090,'"',
				ref( ['NEWISSUE'] l(['NEWISSUE'], 'Y',v7090), 
					| VOL="|v21|"|,
					if p(v53) then ' NUM="',s(mpu,v53,mpl),'"' fi,					
/*					| NUM="|v32|"|,	*/
					| SUPPL="|v131|"|, | SUPPL="|v132|"|
			   	   )
				' />'/,
			fi,			
if p(v7095) then
				'   <NEXT PID="',v7095,'"',
				ref( ['NEWISSUE'] l(['NEWISSUE'], 'Y',v7095), 
					| VOL="|v21|"|,
					if p(v53) then ' NUM="',s(mpu,v53,mpl),'"' fi,					
/*					| NUM="|v32|"|,	*/
					| SUPPL="|v131|"|, | SUPPL="|v132|"|
			   	   )
				' />'/,
			fi,	
			'  </ISSUES>',/			
		</pft>
	</display>
</function>

<!-- ============================================================================ -->
<!--  function CreatePreviousNextIssue                                            -->
<!--                                                                              -->
<!--  Prints the next and previous issues' control information.                   -->
<!--                                                                              -->
<!--  Argument:                                                                   -->
<!--     The pid (issnyyyynnnn) of the current issue.                             -->
<!-- ============================================================================ -->
<function name="CreatePreviousNextIssue" action="replace" tag="4900">
	<field action="delete" tag="list">7085,7090,7095</field>
	<field action="import" tag="list">7049/7050</field>
	
	<!-- inicio - get v7085 = Previous issue -->
	<call name="GetPreviousIssue"><pft>v4900</pft></call>
	<!-- fim - get v7085 = Previous issue -->

	<!-- inicio - get v7095 = Next issue -->
	<call name="GetNextIssue"><pft>v4900</pft></call>
	<!-- fim - get v7095 = Next issue -->

	<display>
		<pft>
			'  <ISSUES>',/
			if p(v7085) then
				'   <PREVIOUS PID="',v7085,'"',
				ref( ['NEWISSUE'] l(['NEWISSUE'], 'Y',v7085), 
					| VOL="|v21|"|,
/*					| NUM="|v53|"|,	*/
					if p(v53) then ' NUM="',s(mpu,v53,mpl),'"' fi,					
					| SUPPL="|v131|"|, | SUPPL="|v132|"|
				   )
				' />'/,
			fi,
			
			if p(v7095) then
				'   <NEXT PID="',v7095,'"',
				ref( ['NEWISSUE'] l(['NEWISSUE'], 'Y',v7095), 
					| VOL="|v21|"|,
/*					| NUM="|v32|"|,	*/
					if p(v53) then ' NUM="',s(mpu,v53,mpl),'"' fi,
					| SUPPL="|v131|"|, | SUPPL="|v132|"|
			   	   )
				' />'/,
			fi,
			'  </ISSUES>',/			
		</pft>
	</display>
</function>

<!-- ============================================================================ -->
<!--  function CreatePreviousNextArticle                                          -->
<!--                                                                              -->
<!--  Prints the next and previous issues' control information.                   -->
<!--                                                                              -->
<!--  Arguments:                                                                  -->
<!--     The pid (issnyyyynnnn) of the current issue (v4900^p).                   -->
<!--     The interface language (v4900^l).                                        -->
<!--     The international language (v4900^i).                                    -->
<!--     Target                                                                   -->
<!--         ABS navigation based in abstract                                     -->
<!--         ART navigation based in full-text                                    -->
<!-- ============================================================================ -->
<function name="CreatePreviousNextArticle" action="replace" tag="4900">
	<field action="delete" tag="list">7085,7090,7095</field>

	<!--display><pft>| v4900 = |v4900</pft></display-->
	<field action="replace" tag="3000"><pft>v4900^l</pft></field>
	<field action="replace" tag="3003"><pft>v4900^i</pft></field>
	
	<call name="GetPreviousArticle"><pft>v4900^p</pft></call>
	<call name="GetNextArticle"><pft>v4900^p</pft></call>

	<!--display>
		<pft>
		/*
		   If navigation is based in abstract and there is no abstract
		   for the previous article, then the previous abstract does not 
		   exist. So, delete tag 7085.
		*/			
		if s(mpu,v4900^t,mpl) = 'ABS' then
			if l(['ARTIGO'],'HR=',v7085) = 0 then
				'DELETE v7085 by LOOKUP'
			else
				ref (['ARTIGO']l(['ARTIGO'],'HR=',v7085), 
					if a(v83) then 'DELETE v7085' fi)
			fi
		fi
		</pft>
	</display-->

	<field action="delete" tag="7085">
		<pft>
		/*
		   If navigation is based in abstract and there is no abstract
		   for the previous article, then the previous abstract does 
		   not exist. So, delete tag 7085.
		*/			
		if s(mpu,v4900^t,mpl) = 'ABS' then
			if l(['ARTIGO'],'HR=',v7085) = 0 then
				'DELETE v7085 by LOOKUP'
			else
				ref (['ARTIGO']l(['ARTIGO'],'HR=',v7085), 
					@PROC_SPLIT_MST.PFT,if a(v83) then 'DELETE v7085' fi)
			fi
		fi
		</pft>
	</field>
	
	<!--display>
		<pft>
	    /*
		   If navigation is based in abstract and there is no abstract
		   for the next article, then the next abstract does not exist.
		   So, delete tag 7095.
		*/
		if s(mpu,v4900^t,mpl) = 'ABS' then
			if l(['ARTIGO'],'HR=',v7095) = 0 then
				'DELETE v7095 by LOOKUP'
			else
				ref (['ARTIGO']l(['ARTIGO'],'HR=',v7095), 
					if a(v83) then 'DELETE v7095' fi)
			fi
		fi
		</pft>
	</display-->
	
	<field action="delete" tag="7095">
		<pft>
	    /*
		   If navigation is based in abstract and there is no abstract
		   for the next article, then the next abstract does not exist.
		   So, delete tag 7095.
		*/
		if s(mpu,v4900^t,mpl) = 'ABS' then
			if l(['ARTIGO'],'HR=',v7095) = 0 then
				'DELETE v7095 by LOOKUP'
			else
				ref (['ARTIGO']l(['ARTIGO'],'HR=',v7095), 
					@PROC_SPLIT_MST.PFT,if a(v83) then 'DELETE v7095' fi)
			fi
		fi
		</pft>
	</field>

	<!-- ref( ['ARTIGO'] l(['ARTIGO'], 'IV=S',v7085,'=H'), '    ',v12/) -->
	<display>
		<pft>
			'  <CURRENTISSUE PID="',mid(v4900^p, 4, size(v4900^p)-7-1),'"',
			   ref (['NEWISSUE']l(['NEWISSUE'], 'Y',mid(v4900^p, 4, size(v4900^p)-7-1)),
			     | VOL="|v21|"|,
				 if p(v53) then ' NUM="',s(mpu,v53,mpl),'"' fi,
				 | SUPPL="|v131|"|,| SUPPL="|v132|"|),
			' />'/

			'  <ARTICLES>',/		
			if p(v7085) then '   <PREVIOUS PID="', v7085, '"><![CDATA[', fi,
		</pft>
	</display>
	
	<!--call name="DisplayTextInAvailableLang">
		<pft>
    	ref (['ARTIGO']l(['ARTIGO'],'HR=',v7085),(v12/))
		</pft>
	</call-->
	
	<proc>
    	<pft>
        	'd9999',
            ref (['ARTIGO']l(['ARTIGO'],'HR=',v7085),
				@PROC_SPLIT_MST.PFT,(|<9999>|v12|</9999>|/))                         
        </pft>
	</proc>
	
	<call name="DisplayTextInAvailableLang">        
    	<pft>( replace(v9999,'"','&quot;')/ )</pft>
    </call>
	
	<display>
		<pft>		
			if p(v7085) then ']]></PREVIOUS>'/ fi,
			if p(v7095) then '   <NEXT PID="', v7095, '"><![CDATA[' fi,
		</pft>
	</display>
	
	<!--call name="DisplayTextInAvailableLang">
		<pft>
    	ref (['ARTIGO']l(['ARTIGO'],'HR=',v7095),(v12/))
		</pft>
	</call-->

	<proc>
    	<pft>
        	'd9999',
            ref (['ARTIGO']l(['ARTIGO'],'HR=',v7095),
				@PROC_SPLIT_MST.PFT,(|<9999>|v12|</9999>|/))                         
        </pft>
	</proc>

	<call name="DisplayTextInAvailableLang">        
    	<pft>( replace(v9999,'"','&quot;')/ )</pft>
    </call>
	
	<display>
		<pft>
			if p(v7095) then ']]></NEXT>'/ fi,
			'  </ARTICLES>',/
		</pft>			
	</display>
</function>

<!--function name="CreatePDFLinkXML" action="replace" tag="4900">
	<display><pft>'  <PDF>'/,'   '</pft></display>
	<call name="PrintPDFLink"><pft>v4900</pft></call>
	<display><pft>/,'  </PDF>'/</pft></display>	
</function-->

<function name="CreatePDFLinkXML" action="replace" tag="4900">
	<display><pft>'  <PDF>',v4900,'</PDF>'</pft></display>
</function>

<function name="CreatePathControlInfoXML" action="replace" tag="4900">
	<field action="import" tag="list">7009/7050</field> <!-- fixed -->
<field action="import" tag="list">7201/7213</field>

	<display>
		<pft>
		'  <SCIELO_INFO>'/,
		'   <SERVER>',           v7009, '</SERVER>',/
		'   <PATH_WXIS>',        v7010, '</PATH_WXIS>',/
		'   <PATH_CGI-BIN>',     v7012, '</PATH_CGI-BIN>'/,
		'   <PATH_DATA>',        v7013, '</PATH_DATA>'/,
		'   <PATH_SCRIPTS>',     v7015, '</PATH_SCRIPTS>'/,
		'   <PATH_SERIAL_HTML>', v7016, '</PATH_SERIAL_HTML>'/,
		'   <PATH_XSL>',         v7017, '</PATH_XSL>'/,
		'   <PATH_GENIMG>',      v7018, '</PATH_GENIMG>'/,
		'   <PATH_SERIMG>',      v7019, '</PATH_SERIMG>'/,
		'   <PATH_DATA_IAH>',    v7020, '</PATH_DATA_IAH>'/,
		'   <PATH_CGI_IAH>',     v7021, '</PATH_CGI_IAH>'/,
                '   <PATH_HTDOCS>',      v7044, '</PATH_HTDOCS>'/,
                '   <STAT_SERVER>',      v7045, '</STAT_SERVER>'/,
		if v7035 = '1' then,
		'   <SERVER_LOG>', v7036, '</SERVER_LOG>'/,
		'   <SCRIPT_LOG_NAME>', v7037, '</SCRIPT_LOG_NAME>'/,
		fi,
			'<databases>'/
			'   <db type="title" lang="en">',v7201^*,'</db>'/,
			'   <db type="title" lang="es">',v7202^*,'</db>'/,
			'   <db type="title" lang="pt">',v7203^*,'</db>'/,			
			'   <db type="article" lang="en">',v7211^*,'</db>'/,
			'   <db type="article" lang="es">',v7212^*,'</db>'/,
			'   <db type="article" lang="pt">',v7213^*,'</db>'/,			
			'</databases>'/
		'  </SCIELO_INFO>'/,
		</pft>		
	</display>
</function>

<function name="CreateTitleGroupXML" action="replace" tag=4001>
<!-- Generate XML for Title Group
     4001 - Title MFN in the TITLE DB -->
  
  <display>
   <pft>' <TITLEGROUP>'/,
        ref(['TITLE']val(v4001),
'  <TITLE><![CDATA[',replace(v100,'"','&quot;'),']]></TITLE>'/,
"  <SUBTITLE><![CDATA["v110"]]></SUBTITLE>"/,
			"  <SHORTTITLE><![CDATA["v150"]]></SHORTTITLE>"/,
			"  <SHORTTITLE-MEDLINE><![CDATA["v421"]]></SHORTTITLE-MEDLINE>"/,
"  <SIGLUM>"v68"</SIGLUM>"/,
),
' </TITLEGROUP>'/#</pft>
  </display>
</function>

<function name="CreateChangesInfoXML" action="replace" tag=4001>
<!-- Generate XML for Changes Info
     4001 - Title MFN in the TITLE DB -->

  <field action="replace" tag="610" split="occ"><pft>ref(['TITLE']val(v4001),(v610/))</pft></field>
  <field action="replace" tag="710" split="occ"><pft>ref(['TITLE']val(v4001),(v710/))</pft></field>
	 
  <display><pft>if p(v610) or p(v710) then ' <CHANGESINFO>'/ fi</pft></display>       	  
  <call name="CreateFormerTitleXML"><pft>(v610/)</pft></call>	  
  <call name="CreateNewTitleXML"><pft>(v710/)</pft></call>	  	  
  <display><pft>if p(v610) or p(v710) then ' </CHANGESINFO>'/# fi</pft></display>
</function>


<function name="PrintTitleISSNList" action="replace" tag=4001>
<!-- Generate Title+ISSN List -->
  
  <field action="replace" tag="4000" split="occ"><pft>(v4001/)</pft></field>
  
  <!-- Get ISSN for every title -->
  <do>
	<parm name="to"><pft>f(nocc(v4000),1,0)</pft></parm>
	<field action="define" tag=1001>Isis_Current</field>

	<loop>
	 <field action="import" tag="list">4000</field>
	 <field action="occ" tag=9000 from=4000><pft>v1001</pft></field>
	 	 
     <do task="search">
      <parm name="db">TITLE</parm>
      <parm name="expression">
	  		<pft>
				/* 
				  A expressao abaixo deveria ser apenas '"',left(v9000,30),'"' mas parece que ha um bug no search engine
				  que nao aceita expressoes com tamanho = 29. Assim, inclui-se um espaco em branco x1 para completar 30
				*/
				
				/*
				'"',left(v9000,30), if size(v9000) = 29 then x1 fi, '"'
				*/
				'"',left(v9000,29),'$"'
			</pft>
	  </parm>

      <field action="define" tag=1001>Isis_Current</field>
      <field action="define" tag=1002>Isis_Total</field>
	  <field action="define" tag=1003>Isis_Status</field>
	
      <loop>	
	   <field action="import" tag="list">9000</field>
	   <!-- Export ISSN -->
	   <flow action="jump">
	    <pft>if s(v9000)<>s(v100) then 'CONTINUE' fi</pft>
	   </flow>
	   <field action="export" tag="list">50,400</field>
	   <flow action="skip"><pft>'Quit'</pft></flow>
	   <label>CONTINUE</label>
      </loop>
	 </do> 
	 
	 <display>
	 	<pft>
			'   <TITLE',if v50='C' then ' TITLEID="'v400'"' fi,'><![CDATA['v9000']]></TITLE>'/
		</pft>
	</display>
	 
    </loop>	
  </do> 
</function>

<function name="CreateFormerTitleXML" action="replace" tag=4001>
<!-- Generate XML for Former Title (Changes Info) 
     4001 - Former Title (repetitive) -->
  
  <display><pft>'  <FORMERTITLE>'/</pft></display>
  
  <!-- Get ISSN for every former title (if there's one) -->
  <call name="PrintTitleISSNList"><pft>v4001</pft></call>
  	 
  <display><pft>'  </FORMERTITLE>'/</pft></display>
</function>

<function name="CreateNewTitleXML" action="replace" tag=4001>
<!-- Generate XML for New Title (Changes Info) 
     4001 - New Title (repetitive) -->

  <display><pft>'  <NEWTITLE>'/</pft></display>
  
  <!-- Get ISSN for every new title (if there's one) -->
  <call name="PrintTitleISSNList"><pft>v4001</pft></call>
  	 
  <display><pft>'  </NEWTITLE>'/</pft></display>
</function>

<function name="CreateISSNXML" action="replace" tag=4001>
<!-- Generate XML for ISSN 
     4001 - Title MFN in the TITLE DB -->

  <display>
   <pft>ref(['TITLE']val(v4001),' <ISSN',| TYPE="|v35|"|,'>'v400'</ISSN>'/#)</pft>
  </display>
</function>

<function name="CreateTitleIdXML" action="replace" tag=4001>
<!-- Generate XML for ISSN 
     4001 - Title MFN in the TITLE DB -->

  <display>
   <!--pft>ref(['TITLE']val(v4001),' <ISSN',| TYPE="|v35|"|,'>'v400'</ISSN>'/#)</pft-->
   <pft>ref(['TITLE']val(v4001),' <TITLEID',| TYPE="|v402|"|,'>'v400'</TITLEID>'/#)</pft>
  </display>
</function>

<function name="CreateISBNXML" action="replace" tag=4001>
<!-- Generate XML for ISBN 
     4001 - Issue MFN in the ISSUE DB -->

  <display>
   <!--pft>ref(['TITLE']val(v4001),' <ISSN',| TYPE="|v35|"|,'>'v400'</ISSN>'/#)</pft-->
   <pft>ref(['NEWISSUE']val(v4001),' <ISBN',| TYPE="|v402|"|,'>'v69'</ISBN>'/#)</pft>
  </display>
</function>

<function name="CreateCopyrightXML" action="replace" tag=4001>
<!-- Generate XML for Copyright
	 4001 - Issue MFN in the NEWISSUE DB -->

  <display>
   <pft>ref(['NEWISSUE']val(v4001),' <COPYRIGHT YEAR="'mid(date,1,4)'"><![CDATA['v620']]></COPYRIGHT>'/#)</pft>
  </display>
</function>

<function name="CreateContactXML" action="replace" tag=4001>
<!-- Generate XML for Contact
	 4001 - Title MFN in the TITLE DB -->
 
  <field action="replace" tag="63" split="occ"><pft>ref(['NEWISSUE']val(v4001),(v630/))</pft></field>
  <field action="replace" tag="64" split="occ"><pft>ref(['NEWISSUE']val(v4001),(v633/))</pft></field>
  
  <display><pft>if p(v63) or p(v64) then ' <CONTACT>'/ fi</pft></display>	  	  
  <call name="CreateContactLinesXML"><pft>(v63/)</pft></call>
  <call name="CreateContactEmailsXML"><pft>(v64/)</pft></call>
  <display><pft>if p(v63) or p(v64) then ' </CONTACT>'/# fi</pft></display>	    
</function>

<function name="CreateContactLinesXML" action="replace" tag=4001>
<!-- Generate XML for Contact Lines
	 4001 - contact lines -->

  <field action="replace" tag="4000" split="occ"><pft>(v4001/)</pft></field>
  
  <display><pft>'  <LINES>'/,(|   <LINE><![CDATA[|v4000|]]></LINE>|/),'  </LINES>'/</pft></display>  
</function>

<function name="CreateContactEmailsXML" action="replace" tag=4001>
<!-- Generate XML for Contact Emails
	 4001 - contact emails -->

  <field action="replace" tag="4000" split="occ"><pft>(v4001/)</pft></field>
 
  <display><pft>'  <EMAILS>'/,(|   <EMAIL>|v4000|</EMAIL>|/),'  </EMAILS>'/</pft></display> 	 
</function>


<function name="CreatePublishersGroupXML" action="replace" tag="4001">
<!-- Generate XML for Publishers Group
	 4001 - Publishers -->
   <field action="replace" tag="480" split="occ"><pft>ref(['NEWISSUE']val(v4001),(v62/))</pft></field>
	
	<display>
		<pft>
			' <PUBLISHERS>'/,
			(if p(v480) then 
				'  <PUBLISHER>'/
				'   <NAME><![CDATA['v480']]></NAME>'/
				'  </PUBLISHER>'/
			 fi),
			' </PUBLISHERS>'/#
		</pft>
	</display>	
</function>

<function name="CreateMissionXML" action="replace" tag="4001">
<!-- Generate XML for mission, according to interface language or international language
	4001 - mission lines -->
	<field action="import" tag="list">3000,3003</field>
	<field action="replace" tag="901" split="occ"><pft>(v4001/)</pft></field>	
	
	<call name="GetLanguage"><pft>v3000/v3003/(v901/)</pft></call>

	<field action="replace" tag="9000">
		<pft>(if s(mpu,v901^l)=s(mpu,v4010[1]) then mpl,v901^*,break fi)</pft>
	</field>
	
	<display><pft>' <MISSION>'v9000'</MISSION>'/#</pft></display>
	
</function>

<function name="CreateArticleTitleXML" action="replace" tag="4001">
<!-- Generate XML for article's title, according to selected language or interface language or international language
	4001 - article's title lines 		
	-->
	<!-- imports 3012 which contains the selected language -->
	<field action="import" tag="list">3000,3003,3012,8000</field>
	<field action="replace" tag="12" split="occ"><pft>(v4001/)</pft></field>

	<!-- check if some of the data v12 is in the language v3012 -->
	<field action="replace" tag="4010">
 	    <pft>,if p(v3012) then 
				,if  s(mpu,v12):s(mpu,'^l'v3012) then v3012
				,fi
			,fi
		</pft>
	</field>

	<!-- check other languages -->
	<call name="GetLanguage"><pft>if a(v4010) then v3000/v3003/(|^l|v12^l/) fi</pft></call>

	<field action="replace"	tag="9000">
		<pft>(if s(mpu,v12^l)=s(mpu,v4010[1]) then mpl,v12^*,break fi)</pft>
	</field>
	<field action="replace"	tag="9001">
		<pft>(if s(mpu,v12^l)=s(mpu,v4010[1]) then mpl,v12^s,break fi)</pft>
	</field>
	<field action="replace"	tag="1000">
		<pft>if v8000<>'.xml' then '^i<![CDATA[^f]]>' fi</pft>
	</field>


	<display>
		<pft>
			'  <TITLE>',v1000^i,v9000,v1000^f,'</TITLE>'/#
			'  <SUBTITLE>',v1000^i,v9001,v1000^f,'</SUBTITLE>'/#
		</pft>
	</display>
	<display><pft>if v8000='.xml' then  (if v12^l<>v4010[1]  then '  <trans-title xml:lang="',v12^l,'">'v12^*'</trans-title>'/ fi) fi</pft></display>
	
</function>

<function name="CreateArticleAbstractXML" action="replace" split="occ" tag="4001">
<!-- Generate XML for abstract, according to interface language or international language
	4001 - abstract lines -->
	<field action="import" tag="list">3000,3003,3012,8000</field>

	<call name="GetLanguage"><pft>v3012/v3003/(|^l|v4001^l/)</pft></call>

	<!-- anteriormente tag="9000", foi substituído por tag="4001", reaproveitando-o, 
	pois havia um problema de memória no wxis.exe, reaproveitando o campo, reaproveita-se a memória -->
    <field action="replace" tag="4001">
   		<pft>(if s(mpu,v4001^l)=s(mpu,v4010[1]) then mpl,v4001^a,break fi)</pft>
    </field>
	<field action="replace"	tag="1000">
		<pft>if v8000<>'.xml' then '^i<![CDATA[^f]]>' fi</pft>
    </field>
	
	<display>
		<pft>
			'  <ABSTRACT xml:lang="',v4010,'">',v1000^i,v4001,v1000^f,'</ABSTRACT>'/#
		</pft>
	</display>

</function>

<function name="DisplayTextInAvailableLang" action="replace" tag="4001">
	<field action="import" tag="list">3000,3003</field>
	<field action="replace" tag="9001" split="occ"><pft>(v4001/)</pft></field>	
	<field action="delete" tag="9000">All</field>

	<call name="GetLanguage"><pft>v3000/v3003/(v9001/)</pft></call>
	
	<field action="replace" tag="9000">
		<pft>
			(if s(mpu,v9001^l) = s(mpu,v4010[1]) then mpl,v9001^*,break fi)
		</pft>
	</field>
	
	<display><pft>v9000</pft></display>
</function>

<function name="CreateAuthorsGroupXML" action="replace" tag="4001">
<!-- Generate XML for Authors Group
	 4001 - pid 
     4001^n - Don't print uppercase names
     -->
	<field action="replace" tag="4001"><pft>mpu,v4001,mpl</pft></field>

	<field action="replace" tag="10" split="occ"><pft>ref(['ARTIGO']l(['ARTIGO'],'HR=',v4001^*),@PROC_SPLIT_MST.PFT,(v10/))</pft></field>
    <field action="replace" tag="11" split="occ"><pft>ref(['ARTIGO']l(['ARTIGO'],'HR=',v4001^*),@PROC_SPLIT_MST.PFT,(v11/))</pft></field>
	
	<display><pft>if p(v10) or p(v11) then ' <AUTHORS>'/ fi</pft></display>
	
    <!-- Defines tag 19988 to prevent CreateArticleAuthorsXML and CreateCorporativeAuthorsXML functions of printing uppercase names -->
    <field action="replace" tag="19988"><pft>if p(v4001^n) then v4001^n fi</pft></field>
    
	<!-- fixed_20051026 tradutor -->
	<call name="CreateArticleAuthorsXML"><pft>(if v10^r='ND' or v10^r='author' then replace(v10,'author','ND')/ fi)</pft></call>
	<call name="CreateArticleAuthorsXML"><pft>(if v10^r='TR' then v10/ fi)</pft></call>
	<call name="CreateArticleAuthorsXML"><pft>(if v10^r='ED' then v10/ fi)</pft></call>
	<call name="CreateArticleAuthorsXML"><pft>(if v10^r='COORD' then v10/ fi)</pft></call>
	<call name="CreateArticleAuthorsXML"><pft>(if v10^r='ORG' then v10/ fi)</pft></call>

	<call name="CreateCorporativeAuthorsXML"><pft>(v11/)</pft></call>

	<display><pft>if p(v10) or p(v11) then ' </AUTHORS>'/# fi</pft></display>	
</function>

<function name="CreateAuthorsAffXML" action="replace" tag="4001">
	<!-- Generate XML for Authors affiliations
	 4001 - pid 
     
     -->
	<field action="replace" tag="4001"><pft>mpu,v4001,mpl</pft></field>

	<field action="replace" tag="70" split="occ"><pft>ref(['ARTIGO']l(['ARTIGO'],'HR=',v4001^*),@PROC_SPLIT_MST.PFT,(v70/))</pft></field>
	<flow action="jump"><pft>if a(v70) then 'exit' fi</pft></flow>

	<display><pft>'<AFFILIATIONS>'/</pft></display>	
	<display>
		<pft>
			('<AFFILIATION ID="',v70^i,'">'/,
				if v70*0.1<>'^' then 
					'<ORGNAME><![CDATA['v70^*']]></ORGNAME>'/
					'<ORGDIV><![CDATA['v70^1']]></ORGDIV>'/
					'<ORGDIV><![CDATA['v70^2']]></ORGDIV>'/
				else 
					'<ORGNAME><![CDATA['v70^1']]></ORGNAME>'/
					'<ORGDIV><![CDATA['v70^2']]></ORGDIV>'/
					'<ORGDIV><![CDATA['v70^3']]></ORGDIV>'/
				fi,
				,'<E-MAIL><![CDATA['v70^e']]></E-MAIL>'/
			,'<CITY>'v70^c'</CITY>'/
			,'<STATE>'v70^s'</STATE>'/
			,'<COUNTRY>'v70^p'</COUNTRY>'/
			,'</AFFILIATION>'/)
		</pft>
	</display>	

	<display><pft>'</AFFILIATIONS>'/</pft></display>	

	<label>exit</label>
</function>

<function name="CreateArticleAuthorsXML" action="replace" tag="4001">
<!-- Generate XML for Analitic Authors Group
	 4001 - Analitic Authors 
     19988 - Flag. It will be imported from caller. If it is defined, the function will not print uppercase names.
-->
   
   <field action="replace" tag="10" split="occ"><pft>(v4001/)</pft></field>
   <field action="import" tag="list">19988</field>
   
	<!--proc>
		<pft>
        	'd9999',
			(|<9999>|v10|</9999>|/)
		</pft>
	</proc>

	<display>
		<pft>
			'  <AUTH_PERS>'/,
			(if p(v10^s) or p(v10^n) then
			    '   <AUTHOR SEARCH="', mpu,replace(s(v9999^s,|,+|v9999^n),' ','+'),mpl,'">'/
			    |    <NAME><![CDATA[|v10^n|]]></NAME>|,/
			    |    <SURNAME><![CDATA[|v10^s|]]></SURNAME>|/
                if p(v10^n) then
                    '    <UPP_NAME><![CDATA[', s(mpu,v10^n,mpl), ']]></UPP_NAME>',/
                fi
                if p(v10^s) then
                    '    <UPP_SURNAME><![CDATA[', s(mpu,v10^s,mpl), ']]></UPP_SURNAME>',/
                fi
				'   </AUTHOR>'/
			fi),				
			'  </AUTH_PERS>'/,
		</pft>
	</display>	
--> 
    
	<!-- fixed_20051121 tradutor -->
    <field action="replace" tag="1111">
		<pft>(if iocc=1 then 
			'^a',
			if v10^r='ND' then 
				'AUTH_PERS' 
			else 
				'PEOPLE'
		fi,
			,'^b',
			,if v10^r='ND' then 
				'AUTHOR' 
			else 
				'PERSON'
			fi,
			,if v10^r<>'ND' then 
				'^c type="',v10^r,'"' 
			fi, 
			,fi),
		</pft>
	</field>
	<!-- fixed_20051121 tradutor -->
    
    <display><pft>'  <',v1111^a,v1111^c,'>'/</pft></display>    
    <do>
        <parm name="count"><pft>f(nocc(v10),1,0)</pft></parm>
        
        <field action="define" tag="9876">Isis_Current</field>
        
        <field action="statusfile" tag="9901">ANSIUC.TAB</field>
        <field action="statusfile" tag="9902">ANSIUC2.TAB</field>
        
        <loop>
            <field action="import" tag="list">10,1111,9901,9902,19988</field>
            
            <field action="occ" tag="9810" from="10"><pft>v9876</pft></field>
            <field action="replace" tag="1300" split="occ"><pft>replace(v9810^1,' ',s(#))</pft></field>
           
           
        	<proc>
        		<pft>
                	'd9999',
        			|<9999>|v9810|</9999>|/
        		</pft>
        	</proc>

            <flow action="jump">
                <pft>
                    if v9901^s : 'e' and v9902^s : 'e' then '' else 'NOUC1' fi
                </pft>
            </flow>
            
            <parm name="uctab"><pft>cat('ANSIUC.TAB')</pft></parm>
            
            <label>NOUC1</label>
            
            <display>
                <pft>
                    if p(v9810^s) or p(v9810^n) then
			        '   <',v1111^b,v1111^c,' SEARCH="', mpu,replace(s(v9999^s,|,+|v9999^n),' ','+'),mpl,'">'/
					if p(v1300) then
						('<AFF xref="',v1300,'"/>'/)
					fi
      			    |    <NAME><![CDATA[|v9810^n|]]></NAME>|,/
		    	    |    <SURNAME><![CDATA[|v9810^s|]]></SURNAME>|/                    
                    fi                    
                </pft>
            </display>
            
            <flow action="jump">
                <pft>
                    if v9901^s : 'e' and v9902^s : 'e' then '' else 'NOUC2' fi
                </pft>
            </flow>
            
            <parm name="uctab"><pft>cat('ANSIUC2.TAB')</pft></parm>

            <label>NOUC2</label>
            
            <flow action="jump"><pft>if p(v19988) then 'NOUPPER' fi</pft></flow>

            <display>
                <pft>
                    if p(v9810^s) or p(v9810^n) then
                        if p(v9810^n) then
                        '    <UPP_NAME><![CDATA[', s(mpu,v9810^n,mpl), ']]></UPP_NAME>',/
                        fi
                        if p(v9810^s) then
                        '    <UPP_SURNAME><![CDATA[', s(mpu,v9810^s,mpl), ']]></UPP_SURNAME>',/
                        fi
                    fi                    
                </pft>
            </display>
            
            <label>NOUPPER</label>
            <display><pft>'   </',v1111^b,'>'/</pft></display>
        </loop>        
    </do>   

    <flow action="jump">
        <pft>
            if v9901^s : 'e' and v9902^s : 'e' then '' else 'NOUC3' fi
        </pft>
    </flow>
    
    <parm name="uctab"><pft>cat('ANSIUC.TAB')</pft></parm>        
    
    <label>NOUC3</label>
    
    <display><pft>'  </',v1111^a,'>'/</pft></display>
</function>

<function name="CreateCorporativeAuthorsXML" action="replace" tag="4001">
<!-- Generate XML for Analitic Authors Group
	 4001 - Analitic Authors 
     19988 - Flag. It will be imported from caller. If it is defined, the function will not print uppercase names.
-->
   <field action="replace" tag="11" split="occ"><pft>(v4001/)</pft></field>
   <field action="import" tag="list">19988</field>

   <field action="statusfile" tag="9901">ANSIUC.TAB</field>
   <field action="statusfile" tag="9902">ANSIUC2.TAB</field>
   
   <flow action="jump">
    <pft>
        if v9901^s : 'e' and v9902^s : 'e' then '' else 'NOUC1' fi
    </pft>
   </flow>
            
   <parm name="uctab"><pft>cat('ANSIUC2.TAB')</pft></parm>
            
   <label>NOUC1</label>

	<display>
		<pft>
			'  <AUTH_CORP>'/,
			(if p(v11^*) or p(v11^d) then
			    '   <AUTHOR>'/
			    |    <ORGNAME><![CDATA[|v11^*|]]></ORGNAME>|,/
			    |    <ORGDIV><![CDATA[|v11^d|]]></ORGDIV>|/
                if a(v19988) then
                    if p(v11) then
	    		    '    <UPP_ORGNAME><![CDATA[',s(mpu,v11^*,mpl),']]></UPP_ORGNAME>',/
                    fi
                    if p(v11^d) then
			        '    <UPP_ORGDIV><![CDATA[',s(mpu,v11^d,mpl),']]></UPP_ORGDIV>',/
                    fi
                fi
				'   </AUTHOR>'/
			fi),				
			'  </AUTH_CORP>'/,
		</pft>
	</display>	

   <flow action="jump">
    <pft>
        if v9901^s : 'e' and v9902^s : 'e' then '' else 'NOUC2' fi
    </pft>
   </flow>
            
   <parm name="uctab"><pft>cat('ANSIUC.TAB')</pft></parm>
            
   <label>NOUC2</label>
    
</function>

<function name="CreateKeywordsGroupXML" action="replace" tag="4001">
<!-- Generate XML for Publishers Group
	 4001 - Publishers -->
    <field action="replace" tag="85" split="occ"><pft>(v4001/)</pft></field>
    <field action="import" tag="list">3000,3003,3012</field>
	
	<call name="GetLanguage"><pft>v3012/v3003/(|^l|v85^l/)</pft></call>
	
	<!--display><pft>'v9000=',v9000,'<br>'/</pft></display-->
	<display>
		<pft>
			' <KEYWORDS>'/,			
			(
			if s(mpu,v85^l) = s(mpu,v4010[1]) then
				mpl,
				if p(v85^k) then
				'  <KEYWORD>'/,
					'   <KEY><![CDATA[',v85^k,']]></KEY>'/,
					|   <SUBKEY><![CDATA[|v85^s|]]></SUBKEY>|/,
				'  </KEYWORD>'/,
				fi
			fi,mpl),
			' </KEYWORDS>'/#
		</pft>
	</display>	
</function>

<!--function name="TestPDFPresence" action="replace" tag="4900">
	<display><pft>ref (['PDF']l(['PDF'],v4900), ' PDF="1"')</pft></display>	
</function-->

<!--function name="PrintPDFLink" action="replace" tag="4900">
	<display><pft>ref (['PDF']l(['PDF'],v4900), v2)</pft></display>	
</function-->

<function name="getSerialPdfUrl" action="replace" tag="4910"> <!-- fixed 20040622 -->
<!-- Gets the pdf file url of an article, given the pid of this article.

    4900 - pid
	Return the url in tag 7999 if pdf file is found or
	nothing (tag 7999 undefined), otherwise.
-->
		<field action="replace" tag="4900" split="occ"><pft>v4910[1]</pft></field> <!-- fixed 20040622 -->

	 <!-- Try to get the information needed to assemble the url (host name, domain, 
	 	  path, ...) -->
  <!-- fixed 20041118 -->
	<field action="import" tag="list">4040,7009/7050</field> <!-- fixed -->

	 <!-- Try to get the information needed to assemble the url (host name, domain, 
	 	  path, ...) -->
	
	<!-- Get the lowercase siglum of the serial -->
	<field action="replace" tag="9000">
		<pft>
		ref(['TITLE']l(['TITLE'],'LOC=',mpu,mid(v4900,4,9),mpl),v68),			
		</pft>
	</field>
	
	<!--display><pft>' sigla: ',v9000</pft></display-->

	<!-- Gets the volumn number, issue number and supplement number -->
	<field action="replace" tag="9001">
		<pft>
			ref( ['NEWISSUE'] l( ['NEWISSUE'],'Y',mid(v4900,4,17) ),
				"n"v53,"v"v21, )
		</pft>
	</field>

	<!--display><pft>' vxxnxxsxx: ',v9001</pft></display-->

	<!-- Gets the html file name. The pdf file has the same name as the html file,
 		 excluding the file extension. The only exception is the bjmbr serial.
	     In this case, the pdf file name is one character shorter.
	 -->
	<field action="replace" tag="9002">
		<pft>
    	ref(['ARTIGO']l(['ARTIGO'],'OU=',mpu,v4900,mpl),@PROC_SPLIT_MST.PFT,v799)
		</pft>
	</field>
	<!-- fixed 20040622 faltava R do HR= -->
	<field action="replace" tag="40">
		<pft>
    	ref(['ARTIGO']l(['ARTIGO'],'HR=',mpu,v4900,mpl),@PROC_SPLIT_MST.PFT,v40)
		</pft>
	</field>

	<!--display><pft>' name: ',v9002</pft></display-->

	<!-- Gets the html file name. The pdf file has the same name as the html file,
 		 excluding the file extension. The only exception is the bjmbr serial.
	     In this case, the pdf file name is one character shorter.
	 -->
	 <!-- fixed 20040622 até o final da funcao -->
	<list action="load" type="list"><pft>(v4040/)</pft></list>

	<do task="list">
	     <field action=define tag="1001">Isis_Current</field>
	     <field action=define tag="1002">Isis_Items</field>
	     <field action=define tag="1">Isis_Item</field>
	     <loop>
		 	<field action="import" tag="list">40,7009,7022,9000/9003</field>
		 	<field action="import" tag="list">7900</field>
	 
			<field action="replace" tag="9003" split="occ">
		<pft>				
			if p(v9000) and p(v9001) and p(v9002) then
				v9000,'/',v9001,'/',
						if v40<>v1 then
							v1'_',
						fi
    			left(v9002,instr(v9002,'.')-1),
				'.pdf'
			fi
		</pft>
	</field>
			<field action="replace" tag="9005" split="occ">
		<pft>
			if p(v9003) then
						'^p',v7022,
						'^f',
				if instr(v7022, '\') > 0 then 
					replace(v9003,'/','\')
				else
					v9003
				fi
			fi
		</pft>
			</field>
	
			<call name="existeFile"><pft>v9005</pft></call>
			<field action="add" tag="7900">
		<pft>
					if v7999<>'' then 'http://',v7009,'/pdf/'v7999 fi
		</pft>
	</field>
<!--display><pft>('url='v7900/)</pft></display-->
	
			<field action="export" tag="7900">7900</field>
			<flow action="skip"><pft>if v7900<>'' then 'Quit' fi</pft></flow>
	
	     </loop>

	  </do>
	  <list action="delete">now</list>
<!--display><pft>('URL='v7900/)</pft></display-->

	<field action="export" tag="7999">7900</field>

</function>

<function name="existeFile" action="replace" tag="4900">
	
	<field action="statusfile" tag="9004">
		<pft>v4900^p,v4900^f</pft>
	</field>
	<field action="replace" tag="7999">
		<pft>
			if v9004^s : 'e' then
				,v4900^f,
			fi
		</pft>
	</field>

	<field action="export" tag="list">7999</field>
</function>

<function name="TestPDFPresence" action="replace" tag="4900">
<!-- If there is a pdf then generate the attribute pdf="1"
     4900 - pid -->
	<field action="import" tag="list">7009/7050</field>

	<!-- Get the url of the pdf file -->
	<!-- fixed 20040622 -->
	<field action="import" tag="4040">4040</field>
	<call name="getSerialPdfUrl"><pft>v4900</pft></call>

	<display><pft>if p(v7999) then ' PDF="1"' fi</pft></display>
</function>

<!-- fixed -->
<function name="getAvailableTextLanguages" action="replace" tag="4900">
<!-- return the available languages to fulltext
     4900 - issn -->
	 <field action="replace" tag="9350" split="occ"><pft>ref(['TITLE']l(['TITLE'],'LOC=',v4900),(v350/))</pft></field>
	 <field action="export" tag="list" >9350</field>

</function>

<function name="TestTranslationPresence" action="replace" tag="4901" split="occ">
<!-- If there is the translations then generate the elements translation
     4901 - pid 
	 4901^o - original language	 
	 4901^l - languages
 	 4901^d - directory	 
 	 4901^e - pdf ou tr (translation)	 
	 -->
	 <!--display><pft>ALL</pft></display-->	
	<field action="import" tag="list">966</field>

   <field action="replace" tag="4901" split="occ"><pft>(v4901/)</pft></field> 
   <field action="replace" tag="4902" split="occ"><pft>(v4901^l/)</pft></field> 
   <field action="replace" tag="4904" split="occ"><pft>(v4901^d/)</pft></field> 
   <field action="replace" tag="4905" split="occ"><pft>(v4901^e/)</pft></field>
   
   <!-- fixed 20070119 - inserção de mais idiomas no texto completo e pdf -->
   <call name="getAvailableTextLanguages"><pft>if v4905='pdf' then mid(v4901,2,9) fi</pft></call>
   <field action="replace" tag="4902" split="occ"><pft>if v4905='pdf' then (v9350/),v4901^o/  fi</pft></field> 	
   <!-- fixed 20070119 -->

   <field action="replace" tag="4906" split="occ"><pft>(v4901^o/)</pft></field> <!-- fixed 20040622 -->
   <field action="replace" tag="4900"><pft>v4901[1]</pft></field>
   
   
   <flow action="jump"><pft>if v4902='' then 'NO_TRANSLATION' fi</pft></flow>
   <flow action="jump"><pft>if p(v966) then 'DO_NOT_CHECK_FILE_SYSTEM' fi</pft></flow>
   <!-- Try to get the information needed to assemble the url (host name, domain, 
	 	  path, ...) -->
	<field action="import" tag="list">7009/7050</field>
	
	<!-- Get the lowercase siglum of the serial -->
	<field action="replace" tag="9000">
		<pft>
		ref(['TITLE']l(['TITLE'],'LOC=',mpu,mid(v4900,4,9),mpl),v68),			
		</pft>
	</field>

	<!-- Gets the volumn number, issue number and supplement number -->
	<field action="replace" tag="9001">
		<pft>
			ref( ['NEWISSUE'] l( ['NEWISSUE'],'Y',mid(v4900,4,17) ),
				"n"v53,"v"v21, )
		</pft>
	</field>

	<!--display><pft>' vxxnxxsxx: ',v9001</pft></display-->

	<!-- Gets the html file name. The traslation file has the same name as the html file, 
		 prefixed by the language + _ excluding the file extension. 
		 The only exception is the bjmbr serial.
	     In this case, the pdf file name is one character shorter.
	 -->
	<field action="replace" tag="9002">
		<pft>
    	ref(['ARTIGO']l(['ARTIGO'],'OU=',mpu,v4900,mpl),@PROC_SPLIT_MST.PFT,v799)
		</pft>
	</field>
	<field action="replace" tag="9002">
		<pft>
			if v4905<>'' then
	   			left(v9002,instr(v9002,'.')-1),
				'.',v4905
			else 
				v9002,
			fi
		</pft>
	</field>
	<field action="replace" tag="9002">
		<pft>
			replace(replace(v9002,'.HTML','.html'),'.HTM','.htm')
		</pft>
	</field>

<!--display><pft>ALL</pft></display-->
	<!-- Assembles the relative path -->

	
	<!--display><pft>' relative path: ',v9003</pft></display-->
	
	
	<!-- Verify the presence of the files. The full path is compounded by the 
		base path and relative path.
	-->
	<list action="load" type="freq"><pft>(v4902/)</pft></list>
	<do task="list">
	     <field action="define" tag="4903">Isis_Current</field>
	     <field action="define" tag="4922">Isis_Item</field>>
    	
    	
		<loop>
			<field action="import" tag="list">9000/9002,9005,4904/4906</field> <!-- fixed 20040622 -->
			<!--display><pft>ALL</pft></display-->
			<field action="replace" tag="9003">
				<pft>
					 if p(v9000) and p(v9001) and p(v9002) then 
					 	
							'^f',v9000,'/',v9001,'/',
							if v4922<>v4906 then
								v4922|_|,
							fi,
	    					v9002,
							'^l',v4922
					 fi 
				</pft>
			</field>
			
			<field action="statusfile" tag="9004">
				<pft>
					if p(v9003) then
						v4904,
						if instr(v4904, '\') > 0 then 
							replace(v9003^f,'/','\')
						else
							v9003^f
						fi
					fi
				</pft>
			</field>
			<field action="replace" tag="9005"><pft>v9005,if v9004^s : 'e' then '<LANG TRANSLATION="',v9003^f,'">',v9003^l,'</LANG>'/ fi</pft></field>
			<field action="export" tag="list">9000/9002,9005,4904,4905</field>
			<!--display><pft>ALL</pft></display-->

		</loop>
	</do>
	<list action="delete">now</list>
	<flow action="jump">NO_TRANSLATION</flow>

	<label>DO_NOT_CHECK_FILE_SYSTEM</label>
	<field action="replace" tag="4905"><pft>if v4905='' then 'tr' fi</pft></field>
	<field action="replace" tag="9005" split="occ"><pft>(if v966^t=v4905[1] then '<LANG TRANSLATION="',v966^f,'">',v966^l,'</LANG>'/ fi)</pft></field>

	<!--display><pft>'status: ',v9004</pft></display-->
	
	<!--display><pft>'http://',v7009,"."v7010,'/pdf/'v9003</pft></display-->
	<label>NO_TRANSLATION</label>
	<field action="export" tag="7999">9005</field>
	
</function>

<!-- fixed 20040614 -- nova funcao -- texto completo / traducao -->
<function name="GetTranslationFileNames" action="replace" tag="4901">
<!-- If there is the translations then generate the elements translation
     4901^o - idioma do texto original
     4901^p - pid 
	 4901^l - language da interface
	 4901^d - diretório da tradução (pdf ou translation)
	-->
	
	<flow action="jump"><pft>if v4901^o=v4901^l then 'end' else 'getFileNames' fi</pft></flow>
	<label>getFileNames</label>
	
	<call name="GetTranslationFileName"><pft>v4901^p/,'^l',v4901^l/,'^d',v4901^d/</pft></call>
	<field action="add" tag="8000"><pft>v7999</pft></field>
	<call name="GetTranslationFileName"><pft>v4901^p/,'^l',v4901^l/,'^d',v4901^d/,'^ab'</pft></call>
	<field action="add" tag="8000"><pft>v7999</pft></field>
	<field action="export" tag="7999">8000</field>
	
	<label>end</label>	
</function>

<function name="GetTranslationFileName" action="replace" tag="4901" split="occ">
<!-- If there is the translations then generate the elements translation
     4901 - pid 
	 4901^l - language
	 4901^a - indica se é o arquivo do trecho do texto completo após as referências: ausente ou caracter 'b' (back)
	 4901^d - diretório da tradução (pdf ou translation)
	 -->
   <field action="replace" tag="4901" split="occ"><pft>(v4901/)</pft></field> 
   <field action="replace" tag="4902" split="occ"><pft>(v4901^l/)</pft></field> 
   <field action="replace" tag="4904" split="occ"><pft>(v4901^d/)</pft></field>    
   <field action="replace" tag="4905" split="occ"><pft>(v4901^a/)</pft></field>    
   <field action="replace" tag="4900"><pft>v4901[1]</pft></field>
   <!-- Try to get the information needed to assemble the url (host name, domain, 
	 	  path, ...) -->
	<field action="import" tag="list">7009/7050</field>
	
	<!-- Get the lowercase siglum of the serial -->
	<field action="replace" tag="9000">
		<pft>
		ref(['TITLE']l(['TITLE'],'LOC=',mpu,mid(v4900,4,9),mpl),v68),			
		</pft>
	</field>

	<!-- Gets the volumn number, issue number and supplement number -->
	<field action="replace" tag="9001">
		<pft>
			ref( ['NEWISSUE'] l( ['NEWISSUE'],'Y',mid(v4900,4,17) ),
				"n"v53,"v"v21,)
		</pft>
	</field>

	<!--display><pft>' vxxnxxsxx: ',v9001</pft></display-->

	<!-- Gets the html file name. The traslation file has the same name as the html file, 
		 prefixed by the language + _ excluding the file extension. 
		 The only exception is the bjmbr serial.
	     In this case, the pdf file name is one character shorter.
	 -->
	<field action="replace" tag="9002">
		<pft>
    	ref(['ARTIGO']l(['ARTIGO'],'OU=',mpu,v4900,mpl),@PROC_SPLIT_MST.PFT,v799)
		</pft>
	</field>
	<field action="replace" tag="9002">
		<pft>
			replace(replace(v9002,'.HTML','.html'),'.HTM','.htm')
		</pft>
	</field>

	<!--display><pft>' name: ',v9002</pft></display-->

	<!-- Assembles the relative path -->
	<field action="replace" tag="9003">
		<pft>				
			if p(v9000) and p(v9001) and p(v9002) then
				v9000,'/',v9001,'/',
				v4902|_|,v4905
    			v9002
			fi
		</pft>
	</field>
	<!--display><pft>' relative path: ',v9003</pft></display-->
	<!-- Verify the presence of the files. The full path is compounded by the 
		base path and relative path.
	-->
	<field action="replace" tag="9005">
		<pft>
			if p(v9003) then
				v4904,
				if instr(v4904, '\') > 0 then 
					replace(v9003,'/','\')
				else
					v9003
				fi
			fi
		</pft>
	</field>
	<field action="statusfile" tag="9004">
		<pft>v9005</pft>
	</field>
	<field action="replace" tag="9006"><pft>if v9004^s : 'e' then v9005 else fi</pft></field>
	
	<!--display><pft>'status: ',v9004</pft></display-->
	
	<!--display><pft>'http://',v7009,"."v7010,'/pdf/'v9003</pft></display-->
	<field action="export" tag="7999">9006</field>	
	
</function>

<function name="oldGetContentTranslationFileName" action="replace" tag="4901" split="occ">
<!-- fixed 20040122 - corrige problema de leitura com cat() por causa do tamanho do arquivo -->
	<do task="import">
	    <parm name="file"><pft>v4901</pft></parm>
		<parm name="type">RLine</parm>
		
		<field action="replace" tag="7999">inicio_body</field>
    	<loop>
			<field action="import" tag="list">7999</field>
			<field action="replace" tag="1"><pft>v1,if p(v2) then ,'|'v2 fi,if p(v3) then ,'|'v3 fi</pft></field>

			<field action="replace" tag="7900">0</field>
			<field action="replace" tag="7901">0</field>

			<flow action="jump"><pft>v7999</pft></flow>
		
			<label>inicio_body</label>
			<!-- procura o inicio da tag body -->
			<field action="replace" tag="7900"><pft>if val(v7900)=0 then f(instr(v1,'<BODY'),1,0) fi</pft></field>
			<field action="replace" tag="7900"><pft>if val(v7900)=0 then f(instr(v1,'<body'),1,0) fi</pft></field>		

			<!-- encontra o primeiro caracter do conteúdo da tag body -->
			<field action="replace" tag="1"><pft>if val(v7900)>0 then mid(v1,val(v7900),size(v1)) fi</pft></field>
			<field action="replace" tag="7900"><pft>if val(v7900)>0 then f(instr(v1,'>'),1,0) fi</pft></field>		

			<!-- indica que a tag body já foi encontrada, agora procurar o fim -->
			<field action="replace" tag="7999">fim_body</field>		

			<label>fim_body</label>
			<field action="replace" tag="7901"><pft>if val(v7901)=0 then f(instr(v1,'</BODY>'),1,0) fi</pft></field>
			<field action="replace" tag="7901"><pft>if val(v7901)=0 then f(instr(v1,'</body>'),1,0) fi</pft></field>		
<!--display><pft>ALL</pft></display-->
			<field action="replace" tag="1"><pft>mid(v1,val(v7900)+1,size(v1))</pft></field>
			<field action="replace" tag="1"><pft>if val(v7901)>0 then mid(v1,1,val(v7901)-1) fi</pft></field>
	
			<label>DISPLAY_BODY</label>
			<display><pft>v1' '/</pft></display>
			<field action="export" tag="list">7999</field>
    		</loop>
	</do>
</function>

<function name="GetContentTranslationFileName" action="replace" tag="4901" split="occ">
<!-- fixed 20040122 - corrige problema de leitura com cat() por causa do tamanho do arquivo -->
	<display><pft>'[replace-this-by-content]',v4901,'[/replace-this-by-content]'</pft></display>
</function>

<function name="CreateScieloCopyInfoXML" action="replace" tag="4900">
	<field action="import" tag="list">7000/7022</field>
	<!--display>
		<pft>
			' <COPYRIGHT YEAR="',left(date,4),'">',/
			'  <OWNER>', ref (['INSTALL']1, v9),'</OWNER>',/
			'  <CONTACT>', ref (['INSTALL']1, v10),'</CONTACT>',/
			' </COPYRIGHT>',/#
		</pft>
	</display-->
	<display>
		<pft>
			' <COPYRIGHT YEAR="',left(date,4),'">',/
			'  <OWNER>',v7001,'</OWNER>',/
			'  <CONTACT>',v7008,'</CONTACT>',/
			' </COPYRIGHT>',/#
		</pft>
	</display>
</function>

<function name="CreateScieloInfoXML" action="replace" tag="4900">
	<field action="import" tag="list">7000/7022</field>
	<field action="import" tag="list">7105/7107</field>
	<!--display>
		<pft>
			' <SCIELOINFOGROUP>'/
			'  <ORGANIZATION>'ref (['INSTALL']1, v3)'</ORGANIZATION>'/
			'  <ADDRESS>'/,
			'   <STREETADDR>'ref (['INSTALL']1, v4)'</STREETADDR>'/
			'   <ZIPSTATE>'ref (['INSTALL']1, v5)'</ZIPSTATE>'/
			'   <COUNTRY>'ref (['INSTALL']1, v6)'</COUNTRY>'/
			'  </ADDRESS>'/,
			'  <PHONE>'ref (['INSTALL']1, v7)'</PHONE>'/
			'  <FAX>'ref (['INSTALL']1, v8)'</FAX>'/
			'  <EMAIL>'ref (['INSTALL']1, v10)'</EMAIL>'/
			' </SCIELOINFOGROUP>'/#
		</pft>
	</display-->
	<display>
		<pft>
			' <SCIELOINFOGROUP>'/
			'  <SITE_NAME>',v7000,'</SITE_NAME>'/
			'  <ORGANIZATION>',v7002,'</ORGANIZATION>'/
			'  <ADDRESS>'/,
			'   <ADDRESS_1>',v7003,'</ADDRESS_1>'/
			'   <ADDRESS_2>',v7004,'</ADDRESS_2>'/
			'   <COUNTRY lang="en">',v7105^*,'</COUNTRY>',
			'   <COUNTRY lang="es">',v7106^*,'</COUNTRY>',
			'   <COUNTRY lang="pt">',v7107^*,'</COUNTRY>',
			'  </ADDRESS>'/,
			'  <PHONE>',v7006,'</PHONE>'/
			'  <FAX>',v7007,'</FAX>'/
			'  <EMAIL>',v7008,'</EMAIL>'/
			' </SCIELOINFOGROUP>'/#
		</pft>
	</display>
</function>

<function name="CreateArticleTitle1XML" action="replace" tag=4001>
<!-- Generate XML for Title of Article
     ^r - MFN 
	 ^l - Interface Language 
	 ^i - International Language 
	 ^f - Flag: 0 - preserve Html tags in title (absent - default: preserve)
	            1 - remove Html tags from title
-->
  	 
  <field action="replace" tag="3000"><pft>v4001^l</pft></field>
  <field action="replace" tag="3003"><pft>v4001^i</pft></field>
  
  <field action="import" tag="list">880</field>

  <field action="replace" tag="12" split="occ"><pft>ref(['ARTIGO']val(v4001^r),@PROC_SPLIT_MST.PFT,(v12/))</pft></field>
  <call name="isXML"><pft>ref(['ARTIGO']val(v4001^r),@PROC_SPLIT_MST.PFT,v702)</pft></call>

  <proc>
    <pft>
	   	'd9999',
		if p(v4001^f) and v4001^f = '1' then 
	        (|<9999>|v12|</9999>|/)
		else
			if instr(v12,'~')=0 then 
				(|a9999~|v12|~|/) 
			else 
				if instr(v12,'{')=0 then 
					(|a9999{|v12|{|/) 
				else 
					('a9999~Invalid caracter in article title~'/) 
				fi 
			fi		fi, 
    </pft>  
  </proc>

  <call name="CreateArticleTitleXML"><pft>(v9999/)</pft></call>
</function>

<function name="CreateIssueInfoXML" action="replace" tag="4001">
	<field action="import" tag="list">5011</field>
<!-- Generate XML for Title of Article
     4001 - MFN -->
<display><pft>'<!-- CreateIssueInfoXML -->'</pft></display>
	<field action="import" tag="1000">1000</field>
	<field action="replace" tag="1000"><pft>if a(v1000) then 'ISSUE' fi</pft></field>

   <display>
    <pft>
  '<',v1000,
	if p(v5011) then
		 ref(['NEWISSUE']val(v4001),
		  ' NUM="beforeprint"' 
		  | VOL="|v31|"|,| VOL="|v21|"|
		  | SUPPL="|v131|"|,
		  | SUPPL="|v132|"|,
		  | PUBDATE="|v65|"|,
		  ,' STATUS="',v742,'"'
		  if p(v55) then 
		| YEAR="|v55*0.4|"|,
		| MONTH="|v55*4.2|"|,
		fi
		if p(v65) then 
		| PUBYEAR="|v65*0.4|"|,
		| PUBMONTH="|v65*4.2|"|,
		fi,	  '>'/)
	else,
	 ref(['NEWISSUE']val(v4001),
	  | VOL="|v31|"|,| VOL="|v21|"|,| NUM="|v53|"|, 
 	  if p(v32) then ' NUM="',s(mpu,v32,mpl),'"' fi,	  
	  | SUPPL="|v131|"|,
	  | SUPPL="|v132|"|,
	  | PUBDATE="|v65|"|,	  
	  ,' STATUS="',v742,'"'
	  if p(v55) then 
                    | YEAR="|v55*0.4|"|,
                    | MONTH="|v55*4.2|"|,
                    fi
                    if p(v65) then 
                    | PUBYEAR="|v65*0.4|"|,
                    | PUBMONTH="|v65*4.2|"|,
                    fi,
	  '>'/)
	  fi
	</pft>	
   </display>
</function>

<function name="GetLanguage" action="replace" tag=4001>
<!-- Determines the language in which some field is going to be shown
     4001 (1st line) - Interface Language
	      (2nd line) - International Language
	     other lines - The field
	 Returns - 
	 4010 - The language in which the field is going to be shown -->
		
   <field action="replace" tag="4003" split="occ"><pft>(v4001/)</pft></field> 
   <field action="replace" tag="4002"><pft>v4003[1]</pft></field>
   <field action="replace" tag="4004"><pft>v4003[2]</pft></field>
   <field action="delete" tag="4003">1</field>
   <field action="delete" tag="4003">1</field>
    
   <field action="replace" tag="4011">
    <pft>if not s(mpu,v4003):s(mpu,'^l'v4002) then 
	      if s(mpu,v4003):s(mpu,'^l'v4004) then mpl,v4004 else mpl,v4003^l[1] fi
		 else mpl,v4002 fi</pft>
   </field>

   <field action="replace" tag="4011">
    <pft>if a(v4011) and v4003:'^l' then (if p(v4003^l) then v4003^l,break fi) fi</pft>
   </field>   
   
   <return action="replace" tag=4010><pft>if p(v4011) then v4011 else '0' fi</pft></return>
</function>

<function name="CreateIssueTitleXML" action="replace" tag=4001>
<!-- Generate XML for Issue Title 
     ^r - MFN 
	 ^l - Interface Language 
	 ^i - International Language -->

	 <display><pft>'<!-- CreateIssueTitleXML -->'</pft></display>
   <field action="replace" tag="18" split="occ"><pft>ref(['NEWISSUE']val(v4001^r),(v18/))</pft></field>
   <field action="replace" tag="9003" split="occ"><pft>ref(['NEWISSUE']val(v4001^r),(v180/))</pft></field>
   
   <call name="GetLanguage"><pft>v4001^l/v4001^i/(v18/)</pft></call>   
   <field action="replace" tag="9000">
    <pft>(if s(mpu,v18^l)=s(mpu,v4010[1]) then mpl, if v18*0.1<>'^' then v18^* fi fi)</pft>
   </field>
   <field action="replace" tag="9000">
    <pft>if a(v9000) then (if v18*0.1<>'^' then v18^*, break  fi) fi</pft>
   </field>

   <field action="replace" tag="9001">
    <pft>(if s(mpu,v18^l)=s(mpu,v4010[1]) then mpl,v18^s fi)</pft>
   </field>
   <field action="replace" tag="9001">
    <pft>if a(v9001) then (if v18^s<>'' then mpl,v18^s, break fi) fi</pft>
   </field>

   <field action="replace" tag="9002">
    <pft>(if s(mpu,v18^l)=s(mpu,v4010[1]) then mpl,v18^c fi)</pft>
   </field>
   <call name="split"><pft>v9002</pft></call>
   <call name="upperCase"><pft>v9000</pft></call>
   
   <display>
	<pft>("<TITLE><![CDATA["v9000"]]></TITLE>"/),
		("<SHORTTITLE><![CDATA["v9003"]]></SHORTTITLE>"/),
		("<SUBTITLE><![CDATA["v9001"]]></SUBTITLE>"/),
		
		'<publicationTitles>'/
 			,'<publicationTitle type="prefix"><![CDATA['v9002']]></publicationTitle>'/
 			,'<publicationTitle type="prefix-part">'/
			,('	<part>'v9004'</part>'/)	
			,'</publicationTitle>'/			
			'	<publicationTitle type="upperCase">'v4001'</publicationTitle>'/
		'</publicationTitles>'/
		
	</pft>
   </display>
   
   <label>RETURN</label>
</function>

<function name="CreateConvertedDateXML" action="replace" tag=4001>

	<field action="replace" tag="7007"><pft>ref(['ARTIGO']l(['ARTIGO'],'OU=',v4001),v91)</pft></field>
	<display><pft>'<DATE ID="converted">'v7007'</DATE>'</pft></display>
</function>

<function name="CreateIssueStripXML" action="replace" tag=4001>
  <field action="import" tag="list">5011</field> <!-- fixed -->
  <field action="replace" tag="5011"><pft>if p(v5011) then '1' fi</pft></field> <!-- fixed -->

<!-- Generate XML for City of Issue 
     ^r - MFN 
	 ^l - Interface Language 
	 ^i - Standard Language -->
	<display><pft>'<!-- CreateIssueStripXML -->'</pft></display>
  <field action="replace" tag="4000" split="occ"><pft>ref(['NEWISSUE']val(v4001^r),v401)</pft></field>

  <field action="replace" tag="9000" split="occ">
   <pft>
   	ref(['NEWISSUE']val(v4001^r),|^1|v54,|^2|v55,|^3|v57,|^4|v53,|^a|v65,|^b|v21,|^d|v69,|^e|v402,|^f|v67),
	ref(['TITLE']l(['TITLE'],'LOC='v4000),|^c|v150)
   </pft>
  </field>
  <field action="replace" tag="56" split="occ">
   <pft>ref(['NEWISSUE']val(v4001^r),(v56/))</pft>
  </field>
  <field action="replace" tag="66" split="occ">
   <pft>ref(['NEWISSUE']val(v4001^r),(v66/))</pft>
  </field>
  <field action="replace" tag="62" split="occ">
   <pft>ref(['NEWISSUE']val(v4001^r),(v62/))</pft>
  </field>
  <field action="replace" tag="140" split="occ">
   <pft>ref(['NEWISSUE']val(v4001^r),(v140/))</pft>
  </field>
  <field action="replace" tag="52" split="occ">
   <pft>ref(['NEWISSUE']val(v4001^r),(v52/))</pft>
  </field>
  <field action="replace" tag="52" split="occ">
   <pft>ref(['NEWISSUE']val(v4001^r),(v52/))</pft>
  </field>
  
  <call name="GetLanguage"><pft>v4001^l/v4001^i/(v56/)</pft></call>
  <field action="replace" tag="56" split="occ">
   <pft>(if s(mpu,v56^l)=s(mpu,v4010[1]) then mpl,v56 fi)</pft>
  </field>
  <call name="GetLanguage"><pft>v4001^l/v4001^i/(v66/)</pft></call>
  <field action="replace" tag="66" split="occ">
   <pft>(if s(mpu,v56^l)=s(mpu,v4010[1]) then mpl,v66 fi)</pft>
  </field>

  <display>
	<pft>
		'<STRIP>',/
	</pft>
  </display>
	<call name="CreateIssueTitleXML"><pft>v4001</pft></call>
	<field action="import" tag="list">880</field>
    <call name="CreateConvertedDateXML"><pft>v880</pft></call>	 

  <display>
	<pft>
		'	<DATE ID="SYSTEM">',date,'</DATE>'/,


		
		'	<EVENT>',/
		|		<DATE ID="FIRST">|v9000^2|</DATE>|/,
		|		<DATE ID="LAST">|v9000^1|</DATE>|/,
		|		<NUM>|v9000^4|</NUM>|/,
		|		<STATE>|v56^s|</STATE>|/,
		|		<CITY>|v56^c|</CITY>|/,
		|		<COUNTRY>|v9000^3|</COUNTRY>|/,			
		'		<SPONSORS>'/
			 	,(
		|			<SPONSOR><![CDATA[|v52^s|]]></SPONSOR>|/
				 ),
		'		</SPONSORS>'/
		'		<ORGANIZERS>'/
			 	,(
		|			<ORGANIZER><![CDATA[|v52^o|]]></ORGANIZER>|/
				 ),
		'		</ORGANIZERS>'/
		'	</EVENT>',/
		'	<PUBL>',/
		|		<DATE>|v9000^a|</DATE>|/,
		|		<STATE>|v66^s|</STATE>|/,
		|		<CITY>|v66^c|</CITY>|/,
		|		<COUNTRY>|v9000^f|</COUNTRY>|/,			
		|		<VOL>|v9000^b|</VOL>|/,			
		|		<SHORTTITLE>|v9000^c|</SHORTTITLE>|/,			
		if p(v9000^d) or p(v9000^e) then ' 		<ISBN',| TYPE="|v9000^e|"|,'>',v9000^d,'</ISBN>'/ fi,			
		'		<PUBLISHERS>'/
			 	,(
		|			<PUBLISHER><![CDATA[|v62|]]></PUBLISHER>|/
				 ),
		'		</PUBLISHERS>'/
		'		<SPONSORS>'/
			 	,(
		|			<SPONSOR><![CDATA[|v140|]]></SPONSOR>|/
				 ),
		'		</SPONSORS>'/
		'	</PUBL>',/
		'<!--',v9000,' -->'
	</pft>
  </display>
  <display>
	<pft>
		 '</STRIP>'/#
	</pft>
  </display>
   
  <label>RETURN</label>
</function>

<function name="CreateErrorXML" action="replace" tag=4001>
<!-- Generate XML for Error
     ^c - Error Code 
	 ^l - Interface Language 
	 ^p - Parameters -->

  <field action="import" tag="list">7008/7050</field> <!-- fixed -->

  <display>
   <pft>
    '<ERROR>'/,
   </pft>
  </display>

  <call name="CreateControlInfoXML"><pft>'^l',v4001^l,'^siso</pft></call>
  
  <display>
   <pft>
  	  '<LANG>'v4001^l'</LANG>'/,
	  '<CODE>'v4001^c'</CODE>'/,
	  '<PID>'v4001^p'</PID>'/,
	  |<EMAIL>|v7008|</EMAIL>|/,
	'</ERROR>'/
   </pft>
  </display>
  
  <flow action="exit">1</flow> 
</function>

<!-- DebugMode
  OFF      - Turns Off debug mode
  XML      - Displays xml
  ON       - Trace On
  TABLE    - Trace Table
  BR       - Trace BR
  VERIFICA - Gathers informations from o/h/f records (db=artigo) when page=issuetoc
  -->
<function name="DebugMode" action="replace" tag="4000">
	
	<display>
		<pft>
			'Content-type:',
			if v4000 = 'OFF' or v4000 = 'VERIFICA' then
				'text/xml',
			else
				'text/html',
			fi,/#
		</pft>
	</display>

	<flow action="jump">
		<pft>
			if v4000 = 'ON' or v4000 = 'TABLE' or v4000 = 'BR' then
				v4000
			else
				'COMMON'
			fi
		</pft>
	</flow>
	
	<label>ON</label>
	<trace>On</trace>	
	<flow action="jump">COMMON</flow>
	
	<label>TABLE</label>
	<trace>Table</trace>	
	<flow action="jump">COMMON</flow>

	<label>BR</label>
	<trace>BR</trace>	
	<flow action="jump">COMMON</flow>

	<label>COMMON</label>
	
	<display>
		<pft>
			if v4000 = 'OFF' or v4000 = 'VERIFICA' then
				'<?xml version="1.0" encoding="ISO-8859-1"?>'/#
			fi
		</pft>
	</display>
</function>

<function name="CreateStatParamXML" tag="4000" action="replace">
<!-- CreateStatParam
  ^s - Log Start Date
  ^c - Log Current (Last) Date
  ^o - Order (filter by order)
  ^i - Initial date (filter by range of dates)
  ^f - Final date (filter by range of dates)
  ^a - Number of access (lower limit)
  -->    
    <display>
        <pft>
            ' <STATPARAM>',/
            '  <START_DATE>'v4000^s'</START_DATE>',/
            '  <CURRENT_DATE>'v4000^c'</CURRENT_DATE>',/
            '  <FILTER>',/
            |   <ORDER>|v4000^o|</ORDER>|,/
            |   <INITIAL_DATE>|v4000^i|</INITIAL_DATE>|,/
            |   <FINAL_DATE>|v4000^f|</FINAL_DATE>|,/
            |   <NUM_ACCESS>|v4000^a|</NUM_ACCESS>|,/
            '  </FILTER>',/
            ' </STATPARAM>',/#
        </pft>
    </display>
</function>

<function name="CreateMySQLErrorXML" tag="4000" action="replace">
<!-- CreateMySQLErrorXML
  ^l - Interface language
  ^e - Error Code
-->    
    <field action="import" tag="list">7008/7040</field>
    <display>
        <pft>            
            '<MYSQL_ERROR>',/
        </pft>
    </display>
            
    <call name="CreateControlInfoXML"><pft>'^l',v4000^l,'^siso</pft></call>
    
    <display>
        <pft>          
            '<LANG>'v4001^l'</LANG>'/,
            '<ERRORCODE>'v4000^e'</ERRORCODE>',/
        	|<EMAIL>|v7008|</EMAIL>|/,
            '</MYSQL_ERROR>',/
        </pft>
    </display>    

    <flow action="exit">1</flow>         
</function>

<function name="PossibleNoAccessXML" action="replace" tag=4001>
<!-- PossibleNoAccessXML - To Create the List of Numbers of Access in Journal Statistics
   4001 - 
     ^m - Max. number of access
     ^l - List of Numbers of Access -->

 <flow action="jump"><pft>if val(v4001^m)>0 then 'CONTINUE' fi</pft></flow>
 <return>1</return>
 
 <label>CONTINUE</label>
 <display><pft>'<POSSIBLE_NO_ACCESS MAX="'v4001^m'">'/</pft></display>
 
 <field action="replace" tag="5000" split="occ"><pft>replace(v4001^l,',',s(#))</pft></field>  

 <display><pft>(|<OPTION>|v5000|</OPTION>|/)</pft></display>
 
 <display><pft>'</POSSIBLE_NO_ACCESS>'/#</pft></display>
</function>

<function name="CreateQueryResultPagesXML" action="replace" tag="4001">
<!-- 4001^c - Current Page 
     4001^l - Number of Lines Per Page 
	 4001^t - Total Number of Pages -->
 
 <flow action="jump"><pft>if val(v4001^t)>0 then 'CONTINUE' fi</pft></flow>
 <return>1</return>
 
 <label>CONTINUE</label>
 <display>
  <pft>'<QUERY_RESULT_PAGES CURRENT="'v4001^c,'"',
                            if val(v4001^c)>1 then ' PREVIOUS="'f(val(v4001^c)-1,1,0)'"' fi,
							if val(v4001^c)<val(v4001^t) then ' NEXT="'f(val(v4001^c)+1,1,0)'"' fi,
                            ' TOTAL="'v4001^t'"',
							' NLINES="'v4001^l'"/>'/#</pft>
 </display>
</function>

<function name="CreateArtIssueInfoXML" action="replace" tag=4001>
<!-- Generate XML for IssueInfo of Article
	 4001^* - mfn 
	 4001^l - Interface Language 
	 4001^i - Standard Language -->

    <field action="import" tag="2000">1000</field>
    <field action="replace" tag="1000"><pft>if a(v2000) then 'ISSUEINFO' fi</pft></field>
	
	<call name="CreateIssueInfoXML"><pft>v4001^*</pft></call>
	
	<call name="CreateIssuePubXML"><pft>v4001^*</pft></call>
	
	<!--call name="CreateIssueTitleXML"><pft>'^r'v4001^*'^l'v4001^l'^i'v4001^i</pft></call-->

	<call name="CreateIssueStripXML"><pft>'^r'v4001^*'^l'v4001^l'^i'v4001^i</pft></call>  	

	<display>
                <pft>                    
            		if a(v2000) then '  </',v1000,'>'/# fi
                </pft>
            </display>
</function>
<function name="old_CreateArtIssueInfoXML" action="replace" tag=4001>
<!-- Generate XML for IssueInfo of Article
	 4001^* - mfn 
	 4001^l - Interface Language 
	 4001^i - Standard Language -->


	<field action="import" tag="list">880</field>
    <do task="mfnrange">
        <parm name="db">NEWISSUE</parm>
        <parm name="from"><pft>v4001^*</pft></parm>
        <parm name="count">1</parm>

        <loop>
		    <field action="import" tag=4001>4001</field>
            <call name="GetLanguage"><pft>v3000/v3003/(v43/)</pft></call>

            <field action="replace" tag="9000">
            	<pft>(if s(mpu,v43^l)=s(mpu,v4010[1]) then mpl,v43^c,break fi)</pft>				
            </field>

            <display>
            	<pft>
                	'  <ISSUEINFO',
            		| VOL="|v21|"|,
            		| NUM="|v53|"|, 
            		| SUPPL="|v131|"|,
            		| SUPPL="|v132|"|,
                    if p(v55) then 
                    | YEAR="|v55*0.4|"|,
                    | MONTH="|v55*4.2|"|,
                    fi
                    if p(v65) then 
                    | PUBYEAR="|v65*0.4|"|,
                    | PUBMONTH="|v65*4.2|"|,
                    fi
                    '>'/,
                </pft>
            </display>
            
            <call name="CreateIssueStripXML"><pft>'^r'v4001^*,'^l'v4001^l,'^i'v4001^i</pft></call>
     
            <display>
                <pft>
                    '   <ISBN>',v69,'</ISBN>'/
            		'  </ISSUEINFO>'/#
                </pft>
            </display>
        </loop>
    </do>
</function>

<function name="GetSectionName" action="replace" tag=4001>
<!-- Get the name of the section in a given language
     4001^l - Interface Language
	 4001^c - Section Code 
	 4001^s - Issue MFN
	 4001^i - International Language
	 Returns: 
	 4010 - Section Name -->

  <do task="mfnrange">
    <parm name="db">NEWISSUE</parm>
    <parm name="from"><pft>v4001^s</pft></parm>
    <parm name="count">1</parm>

    <loop>
      <field action="export" tag=49>49</field>  
    </loop>
  </do>

  <!-- Extract sections with that section code -->
  <field action="replace" tag="4008">
   <pft>(if s(mpu,v49^c)=s(mpu,v4001^c[1]) then mpl,'^l'v49^l,'^t'v49^t/ fi)</pft>
  </field>
 
  <call name="GetLanguage"><pft>v4001^l/v4001^i/v4008</pft></call>
  
  <field action="replace" tag="4009" split="occ"><pft>v4008</pft></field>
  
  <field action="replace" tag="4010">
   <pft>(if s(mpu,v4009^l)=s(mpu,v4010[1]) then mpl,v4009^t fi)</pft>
  </field>
 
  <return action="replace" tag="4010"><pft>v4010</pft></return>
</function>

<function name="CreateArticleTitleOrSectionXML" action="replace" tag="4000">
    <!--
    Prints article title if present. Otherwise section name.
    v4000 - mfn 
    -->
	<field action="import" tag="list">3000,3003,3012</field>

    <do task="mfnrange">
		<parm name="db">ARTIGO</parm>	
        <parm name="from"><pft>v4000</pft></parm>
        <parm name="count">1</parm>

        <loop>
            <display><pft>@PROC_SPLIT_MST.PFT,</pft></display>
        	<field action="import" tag="list">3000,3003,3012</field>
        
            <flow action="jump">
                <pft>if a(v12) then 'SECTION' fi</pft>
            </flow>
    
            <call name="isXML"><pft>v702</pft></call>
            <call name="CreateArticleTitleXML"><pft>(v12/)</pft></call>
            <flow action="skip">Quit</flow>
    
            <label>SECTION</label>
            <call name="GetSectionName">
                <pft>
                    if p(v49^*) then
                        '^l',v3000,
                        '^c',v49^*,
                        '^s',f( l( ['NEWISSUE']'Y',mid(v880,4,17) ), 1, 0 )
                        '^i',v3003,   
                    fi                 
                </pft>
            </call>
    
            <display>
                <pft>
                '  <SECTION><![CDATA[',v4010,']]></SECTION>'/
                </pft>
            </display>        

            <label>SUBSECTION</label>
            <call name="GetSectionName">
                <pft>
                    if p(v49^s) then
                        '^l',v3000,
                        '^c',v49^s,
                        '^s',f( l( ['NEWISSUE']'Y',mid(v880,4,17) ), 1, 0 )
                        '^i',v3003,   
                    fi                 
                </pft>
            </call>
    
            <display>
                <pft>
                '  <SECTION><![CDATA[',v4010,']]></SECTION>'/
                </pft>
            </display>        
        </loop>
    </do>
</function>

<function name="CreateLanguageXML" action="replace" tag="4001">
<!-- Create Article's Language List 
    4001^m - mfn
    4001^s - script
    4001^l - Interface Language 
	4001^i - International Language 
    4001^t - txt language-->

  <field action="import" tag="list">7009/7050</field>  <!--fixed-->
	<!-- fixed 20040910 todo o trechp inserindo a funcao PROC_SPLIT_MST_range e substituindo os ref e lookups -->
    
  <field action="replace" tag="4010" split="occ"><pft>ref(['ARTIGO']val(v4001^m),@PROC_SPLIT_MST.PFT,(v83^l/))</pft></field>
  <field action="replace" tag="4002"><pft>ref(['ARTIGO']val(v4001^m),@PROC_SPLIT_MST.PFT,v880)</pft></field>
  <field action="replace" tag="12" split="occ"><pft>ref(['ARTIGO']val(v4001^m),@PROC_SPLIT_MST.PFT,(v12/))</pft></field>
  <field action="replace" tag="40" split="occ"><pft>ref(['ARTIGO']val(v4001^m),@PROC_SPLIT_MST.PFT,(v40/))</pft></field>
  <field action="replace" tag="880" split="occ"><pft>ref(['ARTIGO']val(v4001^m),@PROC_SPLIT_MST.PFT,(v880/))</pft></field>

  <field action="replace" tag="4002"><pft>v880</pft></field>
  <field action="replace" tag="4004"><pft>v40</pft></field>
  

   
  <!-- 4003 - article's languages from keys -->
  <field action="delete" tag="4003">ALL</field>
  
  <!-- If not found language from key gets article's language from header -->
  <field action="replace" tag="4003" split="occ"><pft>if a(v4003) then (v4004/) fi</pft></field>

  <!-- removes current language from list -->
  <field action="delete" tag="4010">
    <pft>
        (if v4001^s[1] = 'sci_abstract' then
            if v4001^t[1] = v4010 then
                f(iocc,1,0),break
            fi
        fi)
    </pft>
  </field>

  <!-- removes current language from list -->
  <field action="delete" tag="4003">
    <pft>
        (if v4001^s[1] = 'sci_arttext' then
            if v4001^t[1] = v4003 then
                f(iocc,1,0),break
            fi
        fi)
    </pft>
  </field>
  <!--
  <display>
   <pft>
    ' <LANGUAGES MAXLINES="',
        f(
            rmax(
                f(nocc(v4010),1,0),',',
                f(nocc(v4003),1,0),',',
                f(nocc(v4005),1,0)
            ),1,0),
    '">'/
    
    if p(v4010) then
    '  <ABSTRACT_LANGS>'/,
    (|   <LANG>|v4010|</LANG>|/)
    '  </ABSTRACT_LANGS>'/
    fi
    
    '  <ART_TEXT_LANGS>'/,
    (|   <LANG>|v4003|</LANG>|/)
    '  </ART_TEXT_LANGS>'/

    if p(v4005) then
    '  <PDF_LANGS>'/
    '   <LANG>'v4005'</LANG>'/
    '  </PDF_LANGS>'/
    fi
        
    ' </LANGUAGES>'/    
   </pft>
  </display>
  -->
  <display>
   <pft>
    ' <LANGUAGES MAXLINES="',
        f(
            rmax(
                f(nocc(v4010),1,0),',',
                f(nocc(v4003),1,0),',',
                f(nocc(v4005),1,0)
            ),1,0),
    '">'/
   </pft>
  </display>
  
  <field action="delete" tag="9999">ALL</field>
  <call name="OrdenaLanguage"><pft>v4001^l/,(v4010/)</pft></call>

  <display>
   <pft>
    if p(v4010) then
    '  <ABSTRACT_LANGS>'/,
    (|   <LANG>|v9999|</LANG>|/)
    '  </ABSTRACT_LANGS>'/
    fi
   </pft>
  </display>

  <field action="delete" tag="9999">ALL</field>
  <call name="OrdenaLanguage"><pft>v4001^l/,(v4003/)</pft></call>
    
	<!-- fixed -->
	<call name="TestTranslationPresence"><pft>v880/,(if v40[1]<>v12^l then |^l|v12^l/ fi),'^d'v7041/</pft></call>
	
  <!-- fixed -->
  <display>
   <pft>
    '  <ART_TEXT_LANGS>'/,
    (|   <LANG>|v9999|</LANG>|/)
	v7999	
    '  </ART_TEXT_LANGS>'/
   </pft>
  </display>

  <!-- call name="OrdenaLanguage"><pft>v4001^l/,(v4003/)</pft></call -->

	<!-- fixed -->
	<call name="TestTranslationPresence"><pft>v880/,'^o',v40,(|^l|v12^l/),'^d'v7022/,'^epdf'/</pft></call> 
  <display>
   <pft>

    /* fixed 20040916 if p(v4005) then */ 
    if p(v7999) then 
    '  <PDF_LANGS>'/
	v7999
    '  </PDF_LANGS>'/
    fi
   </pft>
  </display>
        
  <display>
   <pft>
    ' </LANGUAGES>'/    
   </pft>
  </display>
</function>

<function name="OrdenaLanguage" tag="4000" action="replace" split="occ">
   <field action="replace" tag="4001"><pft>v4000[1]</pft></field>
   <field action="delete" tag="4000">1</field>
   <flow action="jump">
      <pft>
         if v4000 : v4001 then
         else
            'END_FUNCTION'
         fi
      </pft>
   </flow>
   
   <field action="delete" tag="4000">
      <pft>
         (if v4000 = v4001[1] then
            f(iocc,1,0),break
         fi)
      </pft>
   </field>
   
   <field action="replace" tag="4000" split="occ"><pft>v4001/,(v4000/)</pft></field>
   
   <label>END_FUNCTION</label>
   
   <return action="replace" tag="9999" split="occ"><pft>(v4000/)</pft></return>
</function>

<function name="CreateLattesGroupXML" action="replace" tag="4001">
<!-- Create XML    
-->
   <field action="statusdb" tag="2001">LATTES</field>
	
   <flow action="jump">
	 <pft>if a(v2001^n) then 'EXIT_LATTES' fi</pft>
   </flow>

	<!-- Gets authors list -->
	<field action="replace" tag="10" split="occ"><pft>ref(['ARTIGO']l(['ARTIGO'],'HR=',v4001),@PROC_SPLIT_MST.PFT,(v10/))</pft></field>
	
	<flow action="jump"><pft>if a(v10) then 'EXIT_LATTES' fi</pft></flow>
	
	<!-- Remove HTML tags from authors list -->
	<proc>
		<pft>
        	'd9999',
			(|<9999>|v10|</9999>|/)
		</pft>
	</proc>
	
	<!-- Generate search expression SURNAME1, NAME1 OR SURNAME2, NAME2 OR ... -->
	<field action="replace" tag="3001">
		<pft>
		(if p(v9999^s) or p(v9999^n) then,
			if iocc > 1 then ' OR ' fi, '"',replace(v9999^s,' .','.'),', ',replace(v9999^n,' .','.'),'"'
		fi)
		</pft>
	</field>
	
	<!--display><pft>"Expression = "v3001</pft></display-->
	<do task="search">
		<parm name="db">LATTES</parm>
		<parm name="expression"><pft>v3001</pft></parm>
		
		<display><pft>' <LATTES>'/</pft></display>
		<loop>

			<display>
				<pft>
					'  <AUTHOR HREF="',v4,'">',v3,'</AUTHOR>',/
				</pft>
			</display>
		</loop>			
		<display><pft>' </LATTES>'/</pft></display>
	</do>
	<label>EXIT_LATTES</label>
</function>

<function name="PROC_SPLIT_MST" action="replace" tag="4001">
<!-- fixed 20040122 - corrige problema de leitura da base ao executar a proc PROC_SPLIT_MST. A solução usada foi criar uma função que faz o mesmo que a proc -->
<!-- fixed 20040910 - melhorado -->
<flow action="jump"><pft>if p(v4001^m) then 'splited' fi</pft></flow>
 <do task="mfnrange">
  <parm name="db">ARTIGO</parm>
  <parm name="from"><pft>v4001</pft></parm>
  <parm name="count">1</parm>
  <loop>
   <field action="replace" tag="4001"><pft>v32701</pft></field>   
   <field action="export" tag="list">4001</field>   
   <field action="export" tag="list">1/999</field>   
  </loop>
 </do>
  <file action="close" type="database">ARTIGO</file>
<flow action="jump"><pft>if a(v4001^m) then 'no_splited' fi</pft></flow>
 <label>splited</label>
 <do task="mfnrange">
  <parm name="db"><pft>v4001^*</pft></parm>
  <parm name="from"><pft>v4001^m</pft></parm>
  <parm name="count">1</parm>
  <loop>
  <!--display><pft>ALL</pft></display-->
   <field action="export" tag="list">1/999</field>   
  </loop>
 </do>
 <file action="close" type="database"><pft>v4001^*</pft></file>
 <label>no_splited</label>
<return action="replace" tag="list">1/999</return>   
</function>

<function name="PROC_SPLIT_MST_search" action="replace" tag="4001">
<!-- fixed 20040910 - criado -->

	<do task="search">
	   	<parm name="db">ARTIGO</parm>
		<parm name="expression"><pft>v4001</pft></parm>
		<parm name="count">1</parm>
		
		<loop>
		 <field action="export" tag="list">1/999,32701</field>
		</loop>
	</do>
	
	<call name="PROC_SPLIT_MST"><pft>v32701</pft></call>
   <return action="replace" tag="list">1/999</return>   
</function>

<function name="PROC_SPLIT_MST_keyrange"action="replace" tag="1003">
<!-- fixed 20040910 - criado -->
 <do task="mfnrange">
  <parm name="db">ARTIGO</parm>
  <parm name="from"><pft>v1003</pft></parm>
  <parm name="count">1</parm>
  <loop>
		 <field action="export" tag="list">1/999,32701</field>
  </loop>
 </do>
 <call name="PROC_SPLIT_MST"><pft>v32701</pft></call>
 <return action="replace" tag="list">1/999</return>   
</function>

<function name="getIssueDir" action="replace" tag="4900">
<!-- fixed 20040910 - criado mas nao usado ...-->
	<do task="search">
    	<parm name="db">TITLE</parm>
		<parm name="expression"><pft>'LOC=',mpu,mid(v4900,2,9),mpl</pft></parm>
		<loop>
			<field action="export" tag="list">68</field>
		</loop>
	</do>
	<do task="search">
    	<parm name="db">NEWISSUE</parm>
		<parm name="expression"><pft>'Y',mid(v4900,2,size(v4900)-5-1)</pft></parm>
		<loop>
			<field action="export" tag="list">31,32,131,132</field>
		</loop>
	</do>
	<!-- Get the lowercase siglum of the serial >
	<field action="replace" tag="9000">
		<pft>
		ref(['TITLE']l(['TITLE'],'LOC=',mpu,mid(v4900,2,9),mpl),v68),			
		</pft>
	</field-->
	
	<!--display><pft>' sigla: ',v9000</pft></display-->

	<!-- Gets the volumn number, issue number and supplement number >
	
	<field action="replace" tag="9001">
		<pft>
			ref( ['NEWISSUE'] l( ['NEWISSUE'],'Y',mid(v4900,2,size(v4900)-5-1) ),
				"n"v53,"s"v131,"s"v132 )
		</pft>
	</field-->

   <return action="replace" tag="list">68,31,32,131,132</return>   


</function>

<function name="getDOIDB" action="replace" tag="880">
	<field action="import" tag="7011">7011</field>
	<field action="replace" tag="9000"><pft>ref(['ARTIGO']l(['ARTIGO'],'HR=',v880*0.23),@PROC_SPLIT_MST.PFT,|v|v31,|s|v131,|n|v32,|s|v132)</pft></field>
	<field action="replace" tag="9001"><pft>ref(['TITLE']l(['TITLE'],s('LOC=',v880*4.9)),v68)</pft></field>
	<field action="replace" tag="9800"><pft>v7011,'doi/',v9001|/|,v9000|/|,v9000,</pft></field>

	<field action="statusdb" tag="9901"><pft>v9800</pft></field>

	<return action="replace" tag="9800"><pft>
			if v9901^s : 'i' then 
				v9800
			else
				'no_doi_db'
			fi
		</pft></return>   
 </function>
<function name="returnDOI" action="replace" tag="880">
	<field action="import" tag="7011">7011</field>
	<field action="import" tag="9800">9800</field>
	<call name="getDOIDB"><pft>if a(v9800) then v880 fi</pft></call>
	<field action="export" tag="9800">9800</field>

	<return action="replace" tag="900"><pft>
		if p(v9800) and v9800<>'no_doi_db' then ref([v9800]l([v9800],v880),v1) fi
	</pft></return>   
 </function>
 <function name="getDOILink" action="replace" tag="880">
	<field action="import" tag="7011">7011</field>
	<field action="import" tag="9800">9800</field>
	<call name="getDOIDB"><pft>if a(v9800) then v880 fi</pft></call>
	<field action="export" tag="9800">9800</field>
	<return action="add" tag="9999"><pft>
		if p(v9800) and v9800<>'no_doi_db' then ref([v9800]l([v9800],v880),(if v999^u<>'' then '<a href="',v999^u,'">',v999^l,'</a>'/ fi)) fi
	</pft></return>   
 </function>
 <function name="getDOI" action="replace" tag="880">
	<field action="import" tag="7011">7011</field>
	<call name="returnDOI"><pft>v880</pft></call>

	<display><pft>| DOI="|v900|"|</pft></display>
	<field action="export" tag="9800">9800</field>

 </function>
 
<!-- ============================================================================ -->
<!--  function issueHasArticles                                              -->
<!--                                                                              -->
<!--  Gets the pid (issnyyyynnnn) of the issue					          -->
<!--                                                                              -->
<!--  Argument:                                                                   -->
<!--     The ISSN of the current issue.											  -->
<!--                                                                              -->
<!--  Return value:                                                               -->
<!--     If found, returns the pid of the issue in the tag 9036. Otherwise   -->
<!--  returns nothing.                                                            -->
<!--  this replaces: l(['ARTIGO'],'HR=S',mpu,v4901*1,mpl,'00001') > 0             -->
<!--  because since submission online it is not guaranteed there is always an     -->
<!--  article which pid has the last 5 digits equal to '00001'					 -->
<!-- ============================================================================ -->
<function name="issueHasArticles" action="replace" tag="4901">
	<do task="search">
	   <parm name="db">ARTIGO</parm>
	   <parm name="expression"><pft>'SM='v4901,'$'</pft></parm>
	   <parm name="count">1</parm>

	   <loop>
			<display><pft>@PROC_SPLIT_MST.PFT</pft></display>
			<field action="replace" tag="4902"><pft>v121</pft></field>
			<field action="export" tag="4902">4902</field>
		</loop>	
	</do>	
	<return action="replace" tag="9036">
		<pft>
			if p(v4902) then
				v4901,
			fi,
		</pft>
	</return>
</function>

<function name="isXML" action="replace" tag="702">
	<return action="replace" tag="8000"><pft>replace(mid(v702,size(v702)-3,4),'.XML','.xml')</pft></return> 
</function>

<function name="checkPresentationBeforePrintIssuesTogether" action="replace" tag="4001">
	<field action="import" tag="list">7049/7050</field>

	 <call name="GetIssueAvailableBeforePrint"><pft>if v7050='together' then '^a',v4001*0.9,'^bAHEAD' fi</pft></call>
	 <field action="replace" tag="5010"><pft>if v4001=v7095 then v7095 fi</pft></field>
	 <field action="delete" tag="7095">1</field>
	 <call name="GetIssueAvailableBeforePrint"><pft>if p(v5010) then '^a',v4001*0.9,'^bREVIEW' fi</pft></call>
	 <field action="replace" tag="5011"><pft>v7095</pft></field>
	<return action="replace" tag="5011" split="occ">
		<pft>if p(v5011) then 'ahead'/,v5011/,'review'/ fi</pft>
	</return>
</function>
<function name="CreateIssuePubXML" action="replace" tag=4001>
<display><pft>'<!-- CreateIssuePubXML -->'</pft></display>
			<call name="CreateISBNXML"><pft>v4001</pft></call>
			<call name="CreatePublishersGroupXML"><pft>v4001</pft></call>
			<call name="CreateCopyrightXML"><pft>v4001</pft></call>
			<call name="CreateContactXML"><pft>v4001</pft></call>
</function>


<function name="split2" action="replace" tag="4001" >

   <field action="replace" tag="4001" split="occ"><pft>(v4001/)</pft></field>

   <field action="replace" tag="1" split="occ">
    <pft>f(instr(v4001[1],v4001[2]),1,0)</pft>
   </field>
   <field action="delete" tag="list">101,102,4100</field>
   
   <flow action="jump"><pft>if v1='0' then 'end' fi</pft></flow>
   
   <field action="replace" tag="101" split="occ">
    <pft>mid(v4001[1],1,val(v1))</pft>
   </field>
   <field action="replace" tag="102" split="occ">
    <pft>mid(v4001[1],val(v1)+1,size(v4001[1]))</pft>
   </field>

   <label>end</label>
   <return action="replace" tag="4100" split="occ"><pft>v101,#,v102,#</pft></return>
</function>

<function name="split" action="replace" tag=4001>

	<call name="split2"><pft>v4001,' '/,' '/</pft></call>
   	<field action="add" tag="1"><pft>v4100[1]</pft></field>

	<call name="split2"><pft>v4100[2]/,' '/</pft></call>
   	<field action="add" tag="1"><pft>v4100[1]</pft></field>

	<call name="split2"><pft>v4100[2]/,' '/</pft></call>
   	<field action="add" tag="1"><pft>v4100[1]</pft></field>

	<call name="split2"><pft>v4100[2]/,' '/</pft></call>
   	<field action="add" tag="1"><pft>v4100[1]</pft></field>

   <return action="replace" tag="9004" split="occ"><pft>(v1/)</pft></return>
</function>

<function name="upperCase" action="replace" tag=4001 split="occ">
		<parm name="actab"><pft>cat('ACANS.TAB')</pft></parm>
		<parm name="uctab"><pft>cat('MAANS.TAB')</pft></parm>
		<field action="replace" tag="4001"><pft>mpu,v4001,mpl</pft></field>
		<field action="export" tag="list">4001</field>

   <return action="replace" tag="4001" split="occ"><pft>(v4001/)</pft></return>
</function>

